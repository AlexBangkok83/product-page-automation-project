<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Company Settings - MultiStore Platform</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Lucide Icons -->
    <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.js"></script>
    
    <!-- TinyMCE -->
    <script src="https://cdn.jsdelivr.net/npm/tinymce@6/tinymce.min.js" referrerpolicy="origin"></script>
    
    <style>
        ::-webkit-scrollbar {
            width: 6px;
        }
        ::-webkit-scrollbar-track {
            background: #f1f5f9;
        }
        ::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 3px;
        }
        ::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="flex h-screen">
        <!-- Sidebar -->
        <div class="w-64 bg-white border-r border-gray-200 flex flex-col">
            <!-- Logo/Brand -->
            <div class="px-6 py-4 border-b border-gray-200">
                <div class="flex items-center">
                    <i data-lucide="store" class="w-8 h-8 text-blue-600"></i>
                    <span class="ml-2 text-lg font-semibold text-gray-900">MultiStore</span>
                </div>
            </div>
            
            <!-- Navigation -->
            <nav class="flex-1 px-4 py-6 space-y-1">
                <!-- Dashboard -->
                <a href="/admin-v2" class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50 rounded-lg">
                    <i data-lucide="layout-dashboard" class="w-5 h-5 mr-3"></i>
                    Dashboard
                </a>
                
                <!-- Companies -->
                <div class="pt-4">
                    <div class="flex items-center px-3 py-2 text-xs font-semibold text-gray-500 uppercase tracking-wider">
                        Companies
                    </div>
                    <div class="mt-2 space-y-1 ml-3">
                        <a href="/admin-v2" class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50 rounded-lg">
                            <i data-lucide="building-2" class="w-4 h-4 mr-3"></i>
                            Nextsite
                        </a>
                    </div>
                </div>
                
                <!-- Nextsite expanded -->
                <div class="ml-6 space-y-1">
                    <a href="/admin-v2/company/settings" class="flex items-center px-3 py-2 text-sm font-medium text-blue-700 bg-blue-50 rounded-lg">
                        <i data-lucide="settings" class="w-4 h-4 mr-3"></i>
                        Company Settings
                    </a>
                    <a href="/admin-v2/company/design" class="flex items-center px-3 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50 rounded-lg">
                        <i data-lucide="palette" class="w-4 h-4 mr-3"></i>
                        Design Library
                    </a>
                    <div class="pt-2">
                        <div class="flex items-center px-3 py-1 text-xs font-medium text-gray-500">
                            Shopify Connections
                        </div>
                        <div class="ml-3 mt-1 space-y-1">
                            <a href="/admin-v2/shopify/ecominter" class="flex items-center px-3 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50 rounded-lg">
                                <i data-lucide="shopping-bag" class="w-4 h-4 mr-3"></i>
                                ecominter.myshopify.com
                            </a>
                            <div class="ml-6 space-y-1">
                                <!-- Dynamic stores under this connection -->
                                <% if (typeof stores !== 'undefined' && stores && stores.length > 0) { %>
                                    <% const ecominterStores = stores.filter(store => store.shopify_domain === 'ecominter.myshopify.com'); %>
                                    <% ecominterStores.forEach(store => { %>
                                        <% if (store.status === 'active' || store.status === 'setup') { %>
                                            <a href="/admin-v2/store/<%= store.uuid %>" class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50 rounded-lg">
                                                <i data-lucide="globe" class="w-3 h-3 mr-3"></i>
                                                <%= store.domain %>
                                            </a>
                                        <% } else if (store.status === 'draft') { %>
                                            <a href="/admin-v2/store/<%= store.uuid %>/setup" class="flex items-center px-3 py-2 text-sm font-medium text-gray-400 hover:text-gray-600 hover:bg-gray-50 rounded-lg">
                                                <i data-lucide="file-text" class="w-3 h-3 mr-3"></i>
                                                <span class="opacity-60"><%= store.domain %></span>
                                                <span class="ml-1 text-xs text-red-500">(draft)</span>
                                            </a>
                                        <% } %>
                                    <% }); %>
                                <% } else { %>
                                    <!-- Fallback if no dynamic data -->
                                    <a href="/admin-v2/store/882eacac-d9fa-411c-a9f8-7415c26240b9" class="flex items-center px-3 py-2 text-sm font-medium text-gray-500 hover:text-gray-700 hover:bg-gray-50 rounded-lg">
                                        <i data-lucide="globe" class="w-3 h-3 mr-3"></i>
                                        clipia.de
                                    </a>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </nav>
            
            <!-- Bottom section -->
            <div class="px-4 py-4 border-t border-gray-200">
                <div class="flex items-center">
                    <div class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center">
                        <i data-lucide="user" class="w-4 h-4 text-gray-600"></i>
                    </div>
                    <div class="ml-3">
                        <div class="text-sm font-medium text-gray-900">Admin</div>
                        <div class="text-xs text-gray-500">admin@company.com</div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Main Content -->
        <div class="flex-1 flex flex-col overflow-hidden">
            <!-- Header -->
            <header class="bg-white border-b border-gray-200 px-6 py-4">
                <div class="flex items-center justify-between">
                    <div>
                        <h1 class="text-2xl font-semibold text-gray-900">Company Settings</h1>
                        <p class="text-sm text-gray-500 mt-1">Manage your company information and Shopify connections</p>
                    </div>
                </div>
            </header>
            
            <!-- Main Content Area -->
            <main class="flex-1 overflow-y-auto p-6">
                <div class="max-w-4xl mx-auto space-y-6">
                    
                    <!-- Company Information -->
                    <div class="bg-white rounded-xl border border-gray-200">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-lg font-medium text-gray-900">Company Information</h3>
                        </div>
                        <div class="p-6 space-y-6">
                            <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
                                <div>
                                    <label for="company-name" class="block text-sm font-medium text-gray-700 mb-2">Company Name</label>
                                    <input type="text" id="company-name" name="company-name" value="Nextsite" 
                                           class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                </div>
                                <div>
                                    <label for="company-email" class="block text-sm font-medium text-gray-700 mb-2">Contact Email</label>
                                    <input type="email" id="company-email" name="company-email" value="cto@nextsite.io" 
                                           class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                </div>
                                <div>
                                    <label for="company-phone" class="block text-sm font-medium text-gray-700 mb-2">Phone Number</label>
                                    <input type="tel" id="company-phone" name="company-phone" value="+66822188449" 
                                           class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                </div>
                                <div>
                                    <label for="company-country" class="block text-sm font-medium text-gray-700 mb-2">Country</label>
                                    <select id="company-country" name="company-country" 
                                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                        <option value="TH" selected>Thailand</option>
                                        <option value="DE">Germany</option>
                                        <option value="US">United States</option>
                                        <option value="GB">United Kingdom</option>
                                    </select>
                                </div>
                            </div>
                            <div>
                                <label for="company-address" class="block text-sm font-medium text-gray-700 mb-2">Business Address</label>
                                <textarea id="company-address" name="company-address" rows="3" 
                                          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                          placeholder="ARTEMIS CONDO สุขุมวิท 77">ARTEMIS CONDO สุขุมวิท 77</textarea>
                            </div>
                            <div class="flex justify-end">
                                <button id="save-company-settings" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700">
                                    <i data-lucide="save" class="w-4 h-4 mr-2"></i>
                                    Save Changes
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Shopify Connections -->
                    <div class="bg-white rounded-xl border border-gray-200">
                        <div class="px-6 py-4 border-b border-gray-200 flex items-center justify-between">
                            <h3 class="text-lg font-medium text-gray-900">Shopify Connections</h3>
                            <button id="add-connection" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50">
                                <i data-lucide="plus" class="w-4 h-4 mr-2"></i>
                                Add Connection
                            </button>
                        </div>
                        <div class="p-6">
                            <!-- Existing Connection -->
                            <div class="border border-gray-200 rounded-lg p-6">
                                <div class="flex items-center justify-between mb-4">
                                    <div class="flex items-center">
                                        <div class="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center">
                                            <i data-lucide="shopping-bag" class="w-5 h-5 text-green-600"></i>
                                        </div>
                                        <div class="ml-4">
                                            <h4 class="text-lg font-medium text-gray-900">ecominter.myshopify.com</h4>
                                            <p class="text-sm text-gray-500">Connected • 1 store created</p>
                                        </div>
                                    </div>
                                    <div class="flex items-center space-x-3">
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                            Connected
                                        </span>
                                        <button class="text-gray-400 hover:text-gray-500">
                                            <i data-lucide="settings" class="w-5 h-5"></i>
                                        </button>
                                    </div>
                                </div>
                                
                                <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Shop Name</label>
                                        <input type="text" value="Klipia" disabled 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-500">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Store URL</label>
                                        <input type="text" value="ecominter.myshopify.com" disabled 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-500">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Access Token</label>
                                        <div class="flex items-center">
                                            <input type="password" value="shpat_••••••••••••••••••••••••••••••••" disabled 
                                                   class="flex-1 px-3 py-2 border border-gray-300 rounded-l-lg bg-gray-50 text-gray-500">
                                            <button class="px-3 py-2 border border-l-0 border-gray-300 rounded-r-lg bg-white hover:bg-gray-50">
                                                <i data-lucide="eye" class="w-4 h-4 text-gray-500"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Last Sync</label>
                                        <input type="text" value="2 minutes ago" disabled 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-500">
                                    </div>
                                </div>
                                
                                <div class="mt-4 pt-4 border-t border-gray-100">
                                    <div class="text-sm font-medium text-gray-500 mb-3">Connected Stores</div>
                                    <div class="space-y-2">
                                        <div class="flex items-center justify-between py-2 px-3 bg-gray-50 rounded-lg">
                                            <div class="flex items-center">
                                                <i data-lucide="globe" class="w-4 h-4 text-gray-500 mr-3"></i>
                                                <span class="text-sm font-medium text-gray-900">clipia.de</span>
                                            </div>
                                            <div class="flex items-center space-x-2">
                                                <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800">
                                                    Live
                                                </span>
                                                <a href="/admin-v2/store/882eacac-d9fa-411c-a9f8-7415c26240b9" class="text-blue-600 hover:text-blue-700 text-sm">
                                                    Manage
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="mt-6 flex justify-end space-x-3">
                                    <button id="sync-products" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50">
                                        <i data-lucide="refresh-cw" class="w-4 h-4 mr-2"></i>
                                        Sync Products
                                    </button>
                                    <a href="/admin-v2/create-store" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700">
                                        <i data-lucide="plus" class="w-4 h-4 mr-2"></i>
                                        Create Storefront
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Default Page Content -->
                    <div class="bg-white rounded-xl border border-gray-200">
                        <div class="px-6 py-4 border-b border-gray-200 flex items-center justify-between">
                            <div>
                                <h3 class="text-lg font-medium text-gray-900">Default Page Content</h3>
                                <p class="text-sm text-gray-500 mt-1">Set default content for legal pages used across all your stores</p>
                            </div>
                            <button id="create-page-template" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50">
                                <i data-lucide="plus" class="w-4 h-4 mr-2"></i>
                                Create Page Template
                            </button>
                        </div>
                        <div class="p-6">
                            <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
                                
                                <!-- Privacy Policy -->
                                <div class="border border-gray-200 rounded-lg p-4 hover:border-gray-300 transition-colors">
                                    <div class="flex items-center justify-between mb-3">
                                        <div class="flex items-center">
                                            <i data-lucide="shield" class="w-5 h-5 text-blue-600 mr-2"></i>
                                            <h4 class="text-sm font-medium text-gray-900">Privacy Policy</h4>
                                        </div>
                                        <span class="text-xs text-gray-500">Required</span>
                                    </div>
                                    <p class="text-xs text-gray-600 mb-3">Data protection and privacy information</p>
                                    <div class="flex justify-between items-center">
                                        <span class="text-xs text-gray-500">Last updated: Never</span>
                                        <button class="edit-page-content text-xs text-blue-600 hover:text-blue-700" data-page="privacy">
                                            Edit Content
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Terms of Service -->
                                <div class="border border-gray-200 rounded-lg p-4 hover:border-gray-300 transition-colors">
                                    <div class="flex items-center justify-between mb-3">
                                        <div class="flex items-center">
                                            <i data-lucide="file-text" class="w-5 h-5 text-blue-600 mr-2"></i>
                                            <h4 class="text-sm font-medium text-gray-900">Terms of Service</h4>
                                        </div>
                                        <span class="text-xs text-gray-500">Required</span>
                                    </div>
                                    <p class="text-xs text-gray-600 mb-3">Legal terms and conditions</p>
                                    <div class="flex justify-between items-center">
                                        <span class="text-xs text-gray-500">Last updated: Never</span>
                                        <button class="edit-page-content text-xs text-blue-600 hover:text-blue-700" data-page="terms">
                                            Edit Content
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Cookie Policy -->
                                <div class="border border-gray-200 rounded-lg p-4 hover:border-gray-300 transition-colors">
                                    <div class="flex items-center justify-between mb-3">
                                        <div class="flex items-center">
                                            <i data-lucide="cookie" class="w-5 h-5 text-blue-600 mr-2"></i>
                                            <h4 class="text-sm font-medium text-gray-900">Cookie Policy</h4>
                                        </div>
                                        <span class="text-xs text-gray-500">EU Required</span>
                                    </div>
                                    <p class="text-xs text-gray-600 mb-3">Cookie usage and consent information</p>
                                    <div class="flex justify-between items-center">
                                        <span class="text-xs text-gray-500">Last updated: Never</span>
                                        <button class="edit-page-content text-xs text-blue-600 hover:text-blue-700" data-page="cookies">
                                            Edit Content
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Return Policy -->
                                <div class="border border-gray-200 rounded-lg p-4 hover:border-gray-300 transition-colors">
                                    <div class="flex items-center justify-between mb-3">
                                        <div class="flex items-center">
                                            <i data-lucide="rotate-ccw" class="w-5 h-5 text-blue-600 mr-2"></i>
                                            <h4 class="text-sm font-medium text-gray-900">Return Policy</h4>
                                        </div>
                                        <span class="text-xs text-gray-500">Recommended</span>
                                    </div>
                                    <p class="text-xs text-gray-600 mb-3">Return and refund information</p>
                                    <div class="flex justify-between items-center">
                                        <span class="text-xs text-gray-500">Last updated: Never</span>
                                        <button class="edit-page-content text-xs text-blue-600 hover:text-blue-700" data-page="returns">
                                            Edit Content
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Shipping Policy -->
                                <div class="border border-gray-200 rounded-lg p-4 hover:border-gray-300 transition-colors">
                                    <div class="flex items-center justify-between mb-3">
                                        <div class="flex items-center">
                                            <i data-lucide="truck" class="w-5 h-5 text-blue-600 mr-2"></i>
                                            <h4 class="text-sm font-medium text-gray-900">Shipping Policy</h4>
                                        </div>
                                        <span class="text-xs text-gray-500">Recommended</span>
                                    </div>
                                    <p class="text-xs text-gray-600 mb-3">Delivery terms and conditions</p>
                                    <div class="flex justify-between items-center">
                                        <span class="text-xs text-gray-500">Last updated: Never</span>
                                        <button class="edit-page-content text-xs text-blue-600 hover:text-blue-700" data-page="shipping">
                                            Edit Content
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- About Us -->
                                <div class="border border-gray-200 rounded-lg p-4 hover:border-gray-300 transition-colors">
                                    <div class="flex items-center justify-between mb-3">
                                        <div class="flex items-center">
                                            <i data-lucide="info" class="w-5 h-5 text-blue-600 mr-2"></i>
                                            <h4 class="text-sm font-medium text-gray-900">About Us</h4>
                                        </div>
                                        <span class="text-xs text-gray-500">Optional</span>
                                    </div>
                                    <p class="text-xs text-gray-600 mb-3">Company information and story</p>
                                    <div class="flex justify-between items-center">
                                        <span class="text-xs text-gray-500">Last updated: Never</span>
                                        <button class="edit-page-content text-xs text-blue-600 hover:text-blue-700" data-page="about">
                                            Edit Content
                                        </button>
                                    </div>
                                </div>
                                
                            </div>
                        </div>
                    </div>
                    
                </div>
            </main>
        </div>
    </div>
    
    <script>
        lucide.createIcons();
        
        // Handle company settings save
        document.addEventListener('DOMContentLoaded', function() {
            const saveButton = document.getElementById('save-company-settings');
            if (saveButton) {
                saveButton.addEventListener('click', async function(e) {
                    e.preventDefault();
                    
                    const formData = {
                        companyName: document.getElementById('company-name').value,
                        contactEmail: document.getElementById('company-email').value,
                        contactPhone: document.getElementById('company-phone').value,
                        country: document.getElementById('company-country').value,
                        businessAddress: document.getElementById('company-address').value
                    };
                    
                    try {
                        const response = await fetch('/admin-v2/company/settings', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(formData)
                        });
                        
                        const result = await response.json();
                        
                        if (result.success) {
                            // Show success message
                            showNotification('Company settings saved successfully!', 'success');
                        } else {
                            showNotification('Failed to save settings: ' + result.message, 'error');
                        }
                    } catch (error) {
                        showNotification('Error saving settings', 'error');
                    }
                });
            }
            
            // Handle Add Connection button
            const addConnectionButton = document.getElementById('add-connection');
            if (addConnectionButton) {
                addConnectionButton.addEventListener('click', function() {
                    showNotification('Add Connection feature coming soon!', 'info');
                    // TODO: Implement add connection modal/form
                });
            }
            
            // Handle Edit Content buttons
            const editContentButtons = document.querySelectorAll('.edit-page-content');
            editContentButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const pageType = this.dataset.page;
                    openPageContentEditor(pageType);
                });
            });
            
            // Handle Create Page Template button
            const createTemplateButton = document.getElementById('create-page-template');
            if (createTemplateButton) {
                createTemplateButton.addEventListener('click', function() {
                    openCreateTemplateModal();
                });
            }
            
            // Handle Sync Products button
            const syncButton = document.getElementById('sync-products');
            if (syncButton) {
                syncButton.addEventListener('click', async function() {
                    syncButton.disabled = true;
                    syncButton.innerHTML = '<i data-lucide="loader-2" class="w-4 h-4 mr-2 animate-spin"></i>Syncing...';
                    
                    try {
                        const response = await fetch('/admin-v2/shopify/sync-products', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' }
                        });
                        
                        const result = await response.json();
                        if (result.success) {
                            showNotification('Products synced successfully!', 'success');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showNotification('Sync failed: ' + result.message, 'error');
                        }
                    } catch (error) {
                        showNotification('Sync error occurred', 'error');
                    } finally {
                        syncButton.disabled = false;
                        syncButton.innerHTML = '<i data-lucide="refresh-cw" class="w-4 h-4 mr-2"></i>Sync Products';
                        lucide.createIcons();
                    }
                });
            }
        });
        
        // Page Content Editor Functions
        function openPageContentEditor(pageType) {
            const pageNames = {
                'privacy': 'Privacy Policy',
                'terms': 'Terms of Service', 
                'cookies': 'Cookie Policy',
                'returns': 'Return Policy',
                'shipping': 'Shipping Policy',
                'about': 'About Us'
            };
            
            const pageName = pageNames[pageType] || 'Unknown Page';
            
            // Create modal
            const modal = document.createElement('div');
            modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
            modal.innerHTML = `
                <div class="bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 max-h-[90vh] flex flex-col">
                    <div class="px-6 py-4 border-b border-gray-200 flex items-center justify-between">
                        <h3 class="text-lg font-medium text-gray-900">Edit ${pageName} Content</h3>
                        <button id="close-editor" class="text-gray-400 hover:text-gray-500">
                            <i data-lucide="x" class="w-6 h-6"></i>
                        </button>
                    </div>
                    <div class="flex-1 p-6 overflow-y-auto">
                        <div class="mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Page Title</label>
                            <input type="text" id="page-title" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" value="${pageName}">
                        </div>
                        <div class="mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Content</label>
                            <div id="page-content" style="min-height: 400px;">Loading...</div>
                        </div>
                        <div class="text-sm text-gray-500">
                            <p>This content will be used as the default template for all new stores created under your company.</p>
                        </div>
                    </div>
                    <div class="px-6 py-4 border-t border-gray-200 flex items-center justify-between">
                        <button id="delete-template" class="inline-flex items-center px-4 py-2 border border-red-300 text-sm font-medium rounded-lg text-red-700 bg-white hover:bg-red-50">
                            <i data-lucide="trash-2" class="w-4 h-4 mr-2"></i>
                            Delete Template
                        </button>
                        <div class="flex space-x-3">
                            <button id="cancel-edit" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50">
                                Cancel
                            </button>
                            <button id="save-content" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700">
                                <i data-lucide="save" class="w-4 h-4 mr-2"></i>
                                Save Content
                            </button>
                        </div>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            lucide.createIcons();
            
            // Initialize TinyMCE
            initializeTinyMCE(pageType);
            
            // Event listeners
            document.getElementById('close-editor').addEventListener('click', () => closeEditor(modal));
            document.getElementById('cancel-edit').addEventListener('click', () => closeEditor(modal));
            document.getElementById('save-content').addEventListener('click', () => savePageContent(pageType, modal));
            document.getElementById('delete-template').addEventListener('click', () => deletePageTemplate(pageType, modal));
            
            // Close on background click
            modal.addEventListener('click', (e) => {
                if (e.target === modal) closeEditor(modal);
            });
        }
        
        function closeEditor(modal) {
            // Destroy TinyMCE instance before removing modal
            if (tinymce.get('page-content')) {
                tinymce.get('page-content').destroy();
            }
            modal.remove();
        }
        
        function initializeTinyMCE(pageType) {
            tinymce.init({
                selector: '#page-content',
                height: 400,
                menubar: true,
                plugins: [
                    'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',
                    'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',
                    'insertdatetime', 'media', 'table', 'help', 'wordcount'
                ],
                toolbar: 'undo redo | blocks | ' +
                    'bold italic backcolor | alignleft aligncenter ' +
                    'alignright alignjustify | bullist numlist outdent indent | ' +
                    'removeformat | help | code | preview | fullscreen',
                content_style: 'body { font-family: -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, Roboto, Helvetica Neue, sans-serif; font-size: 14px; }',
                setup: function (editor) {
                    editor.on('init', function () {
                        // Load existing content after editor is ready
                        loadPageContent(pageType);
                    });
                },
                branding: false,
                promotion: false
            });
        }
        
        async function loadPageContent(pageType) {
            try {
                const response = await fetch(`/admin-v2/company/page-template/${pageType}`);
                const result = await response.json();
                
                let content;
                if (result.success && result.template) {
                    document.getElementById('page-title').value = result.template.title || '';
                    content = result.template.content || getDefaultContent(pageType);
                } else {
                    content = getDefaultContent(pageType);
                }
                
                // Set content in TinyMCE
                const editor = tinymce.get('page-content');
                if (editor) {
                    // Convert markdown-style content to HTML for better editing
                    const htmlContent = convertMarkdownToHtml(content);
                    editor.setContent(htmlContent);
                } else {
                    // Fallback if editor not ready yet
                    setTimeout(() => loadPageContent(pageType), 100);
                }
            } catch (error) {
                console.error('Error loading page content:', error);
                const editor = tinymce.get('page-content');
                if (editor) {
                    editor.setContent(convertMarkdownToHtml(getDefaultContent(pageType)));
                }
            }
        }
        
        async function savePageContent(pageType, modal) {
            const title = document.getElementById('page-title').value;
            const editor = tinymce.get('page-content');
            const content = editor ? editor.getContent() : '';
            
            const saveButton = document.getElementById('save-content');
            const originalText = saveButton.innerHTML;
            saveButton.disabled = true;
            saveButton.innerHTML = '<i data-lucide="loader-2" class="w-4 h-4 mr-2 animate-spin"></i>Saving...';
            
            try {
                const response = await fetch('/admin-v2/company/page-template', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ pageType, title, content })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showNotification('Page template saved successfully!', 'success');
                    closeEditor(modal);
                    // Refresh the page to show updated "Last updated" info
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showNotification('Failed to save template: ' + result.message, 'error');
                }
            } catch (error) {
                showNotification('Error saving template', 'error');
            } finally {
                saveButton.disabled = false;
                saveButton.innerHTML = originalText;
            }
        }
        
        async function deletePageTemplate(pageType, modal) {
            if (!confirm('Are you sure you want to delete this page template? This cannot be undone.')) {
                return;
            }
            
            try {
                const response = await fetch(`/admin-v2/company/page-template/${pageType}`, {
                    method: 'DELETE'
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showNotification('Page template deleted successfully!', 'success');
                    closeEditor(modal);
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showNotification('Failed to delete template: ' + result.message, 'error');
                }
            } catch (error) {
                showNotification('Error deleting template', 'error');
            }
        }
        
        function openCreateTemplateModal() {
            // Create modal for creating a new page template
            const modal = document.createElement('div');
            modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
            modal.innerHTML = `
                <div class="bg-white rounded-lg shadow-xl max-w-lg w-full mx-4">
                    <div class="px-6 py-4 border-b border-gray-200">
                        <h3 class="text-lg font-medium text-gray-900">Create Page Template</h3>
                    </div>
                    <div class="p-6">
                        <div class="mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Page Type</label>
                            <input type="text" id="new-page-type" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="e.g., faq, contact, warranty">
                        </div>
                        <div class="mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Display Name</label>
                            <input type="text" id="new-page-name" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="e.g., FAQ, Contact Us, Warranty">
                        </div>
                        <div class="text-sm text-gray-500 mb-4">
                            <p>The page type should be lowercase and without spaces (use hyphens or underscores if needed).</p>
                        </div>
                    </div>
                    <div class="px-6 py-4 border-t border-gray-200 flex items-center justify-end space-x-3">
                        <button id="cancel-create" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50">
                            Cancel
                        </button>
                        <button id="create-template" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700">
                            <i data-lucide="plus" class="w-4 h-4 mr-2"></i>
                            Create Template
                        </button>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            lucide.createIcons();
            
            // Event listeners
            document.getElementById('cancel-create').addEventListener('click', () => modal.remove());
            document.getElementById('create-template').addEventListener('click', () => {
                const pageType = document.getElementById('new-page-type').value.trim().toLowerCase();
                const pageName = document.getElementById('new-page-name').value.trim();
                
                if (!pageType || !pageName) {
                    showNotification('Please fill in both fields', 'error');
                    return;
                }
                
                // Validate page type format (alphanumeric, hyphens, underscores only)
                if (!/^[a-z0-9_-]+$/.test(pageType)) {
                    showNotification('Page type should only contain lowercase letters, numbers, hyphens, and underscores', 'error');
                    return;
                }
                
                modal.remove();
                createNewPageTemplate(pageType, pageName);
            });
            
            // Close on background click
            modal.addEventListener('click', (e) => {
                if (e.target === modal) modal.remove();
            });
        }
        
        async function createNewPageTemplate(pageType, pageName) {
            try {
                const response = await fetch('/admin-v2/company/page-template/create', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ pageType, pageName })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showNotification(`${pageName} template created successfully!`, 'success');
                    // Reload page to show new template
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showNotification('Failed to create template: ' + result.message, 'error');
                }
            } catch (error) {
                showNotification('Error creating template', 'error');
            }
        }
        
        function convertMarkdownToHtml(markdown) {
            // Simple markdown to HTML conversion for better TinyMCE display
            return markdown
                .replace(/^# (.*$)/gim, '<h1>$1</h1>')
                .replace(/^## (.*$)/gim, '<h2>$1</h2>')
                .replace(/^### (.*$)/gim, '<h3>$1</h3>')
                .replace(/^\* (.*$)/gim, '<li>$1</li>')
                .replace(/^\- (.*$)/gim, '<li>$1</li>')
                .replace(/\n\n/g, '</p><p>')
                .replace(/^(?!<h|<li|<\/p|<p)/gm, '<p>')
                .replace(/(<li>.*<\/li>)/gs, '<ul>$1</ul>')
                .replace(/<\/li>\s*<ul>/g, '</li>')
                .replace(/<\/ul>\s*<li>/g, '<li>')
                .replace(/(<p>.*?)(\n|$)/gs, '$1</p>')
                .replace(/<p><\/p>/g, '')
                .replace(/<p>(<h[1-6]>)/g, '$1')
                .replace(/(<\/h[1-6]>)<\/p>/g, '$1')
                .replace(/\n/g, '<br>');
        }
        
        function getDefaultContent(pageType) {
            const defaults = {
                'privacy': `<h1>Privacy Policy</h1>
<p>This privacy policy explains how we collect, use, and protect your information when you visit our website.</p>

<h2>Information We Collect</h2>
<ul>
<li>Personal information you provide when making purchases</li>
<li>Website usage data and cookies</li>
<li>Communication records</li>
</ul>

<h2>How We Use Information</h2>
<ul>
<li>To process your orders and payments</li>
<li>To improve our services and website</li>
<li>To communicate with you about your orders</li>
</ul>

<h2>Data Protection</h2>
<p>We implement appropriate security measures to protect your personal information.</p>

<p><em>Last updated: [Date]</em></p>`,
                'terms': `<h1>Terms of Service</h1>
<p>These terms govern your use of our website and purchase of our products.</p>

<h2>Use of Website</h2>
<ul>
<li>You must be 18 or older to make purchases</li>
<li>All information provided must be accurate</li>
<li>Prohibited uses include illegal activities</li>
</ul>

<h2>Products and Orders</h2>
<ul>
<li>All prices are subject to change</li>
<li>Orders are subject to availability</li>
<li>We reserve the right to cancel orders</li>
</ul>

<h2>Limitation of Liability</h2>
<p>Our liability is limited to the extent permitted by law.</p>

<p><em>Last updated: [Date]</em></p>`,
                'cookies': `<h1>Cookie Policy</h1>
<p>We use cookies to improve your experience on our website.</p>

<h2>What Are Cookies</h2>
<p>Cookies are small text files stored on your device when you visit our website.</p>

<h2>Types of Cookies We Use</h2>
<ul>
<li>Essential cookies for website functionality</li>
<li>Analytics cookies to understand usage</li>
<li>Marketing cookies for personalized ads</li>
</ul>

<h2>Managing Cookies</h2>
<p>You can control cookies through your browser settings.</p>

<p><em>Last updated: [Date]</em></p>`,
                'returns': `<h1>Return Policy</h1>
<p>We want you to be completely satisfied with your purchase.</p>

<h2>Return Period</h2>
<p>You have 30 days from delivery to return items.</p>

<h2>Return Conditions</h2>
<ul>
<li>Items must be unused and in original packaging</li>
<li>Original receipt or proof of purchase required</li>
<li>Some items may not be eligible for return</li>
</ul>

<h2>Return Process</h2>
<ol>
<li>Contact our customer service</li>
<li>Package items securely</li>
<li>Use provided return label</li>
</ol>

<h2>Refunds</h2>
<p>Refunds will be processed within 5-10 business days.</p>

<p><em>Last updated: [Date]</em></p>`,
                'shipping': `<h1>Shipping Policy</h1>
<p>Information about our shipping methods and policies.</p>

<h2>Shipping Methods</h2>
<ul>
<li>Standard shipping: 5-7 business days</li>
<li>Express shipping: 2-3 business days</li>
<li>Overnight shipping: 1 business day</li>
</ul>

<h2>Shipping Costs</h2>
<p>Shipping costs are calculated at checkout based on destination and method.</p>

<h2>International Shipping</h2>
<p>We ship to select international destinations. Additional customs fees may apply.</p>

<h2>Delivery</h2>
<p>Someone must be present to receive the package, or it will be left at a secure location.</p>

<p><em>Last updated: [Date]</em></p>`,
                'about': `<h1>About Us</h1>
<p>Learn more about our company and mission.</p>

<h2>Our Story</h2>
<p>Founded in [Year], we are passionate about providing high-quality products to our customers.</p>

<h2>Our Mission</h2>
<p>To deliver exceptional products and customer service while maintaining sustainable practices.</p>

<h2>Our Team</h2>
<p>Our dedicated team works hard to ensure every customer has a positive experience.</p>

<h2>Contact Us</h2>
<p>We'd love to hear from you! Contact us through our website or customer service.</p>

<p><em>Last updated: [Date]</em></p>`
            };
            
            return defaults[pageType] || 'Enter your content here...';
        }

        // Utility function to show notifications
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 px-4 py-2 rounded-lg text-white z-50 ${
                type === 'success' ? 'bg-green-500' : 
                type === 'error' ? 'bg-red-500' : 'bg-blue-500'
            }`;
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }
    </script>
</body>
</html>