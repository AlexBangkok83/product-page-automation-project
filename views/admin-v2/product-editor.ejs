<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Editor - MultiStore Platform</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Lucide Icons -->
    <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.js"></script>
    
    <style>
        ::-webkit-scrollbar {
            width: 6px;
        }
        ::-webkit-scrollbar-track {
            background: #f1f5f9;
        }
        ::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 3px;
        }
        ::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="flex h-screen">
        <!-- Sidebar -->
        <div class="w-64 bg-white border-r border-gray-200 flex flex-col">
            <!-- Logo/Brand -->
            <div class="px-6 py-4 border-b border-gray-200">
                <div class="flex items-center">
                    <i data-lucide="store" class="w-8 h-8 text-blue-600"></i>
                    <span class="ml-2 text-lg font-semibold text-gray-900">MultiStore</span>
                </div>
            </div>
            
            <!-- Navigation -->
            <nav class="flex-1 px-4 py-6 space-y-1">
                <!-- Dashboard -->
                <a href="/admin-v2" class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50 rounded-lg">
                    <i data-lucide="layout-dashboard" class="w-5 h-5 mr-3"></i>
                    Dashboard
                </a>
                
                <!-- Companies -->
                <div class="pt-4">
                    <div class="flex items-center px-3 py-2 text-xs font-semibold text-gray-500 uppercase tracking-wider">
                        Companies
                    </div>
                    <div class="mt-2 space-y-1 ml-3">
                        <a href="/admin-v2" class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50 rounded-lg">
                            <i data-lucide="building-2" class="w-4 h-4 mr-3"></i>
                            Nextsite
                        </a>
                    </div>
                </div>
                
                <!-- Nextsite expanded -->
                <div class="ml-6 space-y-1">
                    <a href="/admin-v2/company/settings" class="flex items-center px-3 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50 rounded-lg">
                        <i data-lucide="settings" class="w-4 h-4 mr-3"></i>
                        Company Settings
                    </a>
                    <a href="/admin-v2/company/design" class="flex items-center px-3 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50 rounded-lg">
                        <i data-lucide="palette" class="w-4 h-4 mr-3"></i>
                        Design Library
                    </a>
                    <div class="pt-2">
                        <div class="flex items-center px-3 py-1 text-xs font-medium text-gray-500">
                            Shopify Connections
                        </div>
                        <div class="ml-3 mt-1 space-y-1">
                            <a href="/admin-v2/shopify/ecominter" class="flex items-center px-3 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50 rounded-lg">
                                <i data-lucide="shopping-bag" class="w-4 h-4 mr-3"></i>
                                ecominter.myshopify.com
                            </a>
                            <div class="ml-6 space-y-1">
                                <a href="/admin-v2/store/882eacac-d9fa-411c-a9f8-7415c26240b9" class="flex items-center px-3 py-2 text-sm font-medium text-blue-700 bg-blue-50 rounded-lg">
                                    <i data-lucide="globe" class="w-3 h-3 mr-3"></i>
                                    clipia.de
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </nav>
            
            <!-- Bottom section -->
            <div class="px-4 py-4 border-t border-gray-200">
                <div class="flex items-center">
                    <div class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center">
                        <i data-lucide="user" class="w-4 h-4 text-gray-600"></i>
                    </div>
                    <div class="ml-3">
                        <div class="text-sm font-medium text-gray-900">Admin</div>
                        <div class="text-xs text-gray-500">admin@company.com</div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Main Content -->
        <div class="flex-1 flex flex-col overflow-hidden">
            <!-- Header -->
            <header class="bg-white border-b border-gray-200 px-6 py-4">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-4">
                        <a href="/admin-v2/store/882eacac-d9fa-411c-a9f8-7415c26240b9" class="text-gray-500 hover:text-gray-700">
                            <i data-lucide="arrow-left" class="w-5 h-5"></i>
                        </a>
                        <div>
                            <h1 class="text-2xl font-semibold text-gray-900">Edit Product: Elegante Solbriller</h1>
                            <p class="text-sm text-gray-500 mt-1">clipia.de</p>
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="https://clipia.de/products/elegante-solbriller-for-alle" target="_blank" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50">
                            <i data-lucide="external-link" class="w-4 h-4 mr-2"></i>
                            View Product
                        </a>
                        <button onclick="saveProduct()" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 mr-2">
                            <i data-lucide="save" class="w-4 h-4 mr-2"></i>
                            Save
                        </button>
                        <button onclick="deployProduct()" class="deploy-product-btn inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-green-600 hover:bg-green-700">
                            <i data-lucide="rocket" class="w-4 h-4 mr-2"></i>
                            Deploy to Live Site
                        </button>
                    </div>
                </div>
            </header>
            
            <!-- Main Content Area -->
            <main class="flex-1 overflow-hidden">
                <div class="h-full flex">
                    <!-- Product Details -->
                    <div class="flex-1 overflow-y-auto p-6">
                        <div class="space-y-8">
                            
                            <!-- Template Selection -->
                            <div class="bg-white rounded-xl border border-gray-200">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-medium text-gray-900">Product Page Template</h3>
                                </div>
                                <div class="p-6">
                                    <div class="mb-4">
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Select Template</label>
                                        <select id="template-selector" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" onchange="loadTemplate()">
                                            <option value="">No template selected</option>
                                            <!-- Templates will be loaded dynamically -->
                                        </select>
                                    </div>
                                    <div id="template-preview" class="hidden mt-4">
                                        <div class="text-sm text-gray-600 bg-blue-50 p-4 rounded-lg mb-4">
                                            <i data-lucide="info" class="w-4 h-4 inline mr-2"></i>
                                            <span id="template-description">Template loaded. Configure the elements below.</span>
                                        </div>
                                        <div id="template-fields" class="space-y-4">
                                            <!-- Template-specific fields will be loaded here -->
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Basic Information (Shopify Data) -->
                            <div class="bg-white rounded-xl border border-gray-200">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <div class="flex items-center justify-between">
                                        <h3 class="text-lg font-medium text-gray-900">Product Information</h3>
                                        <span class="inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-green-100 text-green-800">
                                            <i data-lucide="link" class="w-3 h-3 mr-1"></i>
                                            Synced from Shopify
                                        </span>
                                    </div>
                                </div>
                                <div class="p-6 space-y-6">
                                    <div class="grid grid-cols-1 gap-6 lg:grid-cols-2">
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Product Title</label>
                                            <input type="text" value="Elegante Solbriller for Alle" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-600" readonly>
                                            <p class="text-xs text-gray-500 mt-1">Managed by Shopify</p>
                                        </div>
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Handle</label>
                                            <input type="text" value="elegante-solbriller-for-alle" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-500" disabled>
                                        </div>
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Price</label>
                                            <div class="relative">
                                                <span class="absolute left-3 top-2 text-gray-500">€</span>
                                                <input type="number" value="29.95" class="w-full pl-8 pr-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-600" readonly>
                                            </div>
                                            <p class="text-xs text-gray-500 mt-1">Managed by Shopify</p>
                                            </div>
                                        </div>
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Compare at Price</label>
                                            <div class="relative">
                                                <span class="absolute left-3 top-2 text-gray-500">€</span>
                                                <input type="number" value="39.95" class="w-full pl-8 pr-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-600" readonly>
                                            </div>
                                            <p class="text-xs text-gray-500 mt-1">Managed by Shopify</p>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                                        <textarea rows="6" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-50 text-gray-600" readonly>Premium sunglasses for every occasion. Our elegant sunglasses combine style and functionality with UV protection and durable frames. Perfect for any outdoor activity or fashion statement.</textarea>
                                        <p class="text-xs text-gray-500 mt-1">Managed by Shopify</p>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Images -->
                            <div class="bg-white rounded-xl border border-gray-200">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-medium text-gray-900">Product Images</h3>
                                </div>
                                <div class="p-6">
                                    <div class="grid grid-cols-2 gap-4 lg:grid-cols-4">
                                        <!-- Primary Image -->
                                        <div class="relative group">
                                            <div class="aspect-square bg-gray-200 rounded-lg flex items-center justify-center border-2 border-blue-500">
                                                <i data-lucide="image" class="w-8 h-8 text-gray-400"></i>
                                            </div>
                                            <div class="absolute top-2 left-2">
                                                <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800">
                                                    Primary
                                                </span>
                                            </div>
                                            <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                                                <button class="w-6 h-6 bg-red-500 rounded-full flex items-center justify-center text-white hover:bg-red-600">
                                                    <i data-lucide="x" class="w-3 h-3"></i>
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <!-- Additional Images -->
                                        <div class="relative group">
                                            <div class="aspect-square bg-gray-200 rounded-lg flex items-center justify-center">
                                                <i data-lucide="image" class="w-8 h-8 text-gray-400"></i>
                                            </div>
                                            <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                                                <button class="w-6 h-6 bg-red-500 rounded-full flex items-center justify-center text-white hover:bg-red-600">
                                                    <i data-lucide="x" class="w-3 h-3"></i>
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <!-- Upload New -->
                                        <div class="aspect-square border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center hover:border-gray-400 cursor-pointer">
                                            <div class="text-center">
                                                <i data-lucide="upload" class="w-6 h-6 text-gray-400 mx-auto mb-1"></i>
                                                <div class="text-xs text-gray-500">Add Image</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Inventory & Shipping -->
                            <div class="bg-white rounded-xl border border-gray-200">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-medium text-gray-900">Inventory & Shipping</h3>
                                </div>
                                <div class="p-6 space-y-6">
                                    <div class="grid grid-cols-1 gap-6 lg:grid-cols-3">
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">SKU</label>
                                            <input type="text" value="CLIPIA-SUN-001" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                        </div>
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Stock Quantity</label>
                                            <input type="number" value="25" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                        </div>
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Weight (g)</label>
                                            <input type="number" value="150" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                        </div>
                                    </div>
                                    
                                    <div class="flex items-center">
                                        <input type="checkbox" id="track-inventory" checked class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                                        <label for="track-inventory" class="ml-2 text-sm text-gray-700">Track inventory for this product</label>
                                    </div>
                                    
                                    <div class="flex items-center">
                                        <input type="checkbox" id="continue-selling" class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                                        <label for="continue-selling" class="ml-2 text-sm text-gray-700">Continue selling when out of stock</label>
                                    </div>
                                </div>
                            </div>
                            
                        </div>
                    </div>
                    
                    <!-- Sidebar Panel -->
                    <div class="w-72 lg:w-80 bg-white border-l border-gray-200 flex flex-col">
                        <!-- Panel Header -->
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-lg font-medium text-gray-900">Product Status</h3>
                        </div>
                        
                        <!-- Panel Content -->
                        <div class="flex-1 overflow-y-auto p-6 space-y-6">
                            
                            <!-- Status -->
                            <div>
                                <h4 class="text-sm font-medium text-gray-900 mb-3">Visibility</h4>
                                <div class="space-y-3">
                                    <label class="flex items-center">
                                        <input type="radio" name="status" value="active" checked class="text-blue-600 focus:ring-blue-500">
                                        <span class="ml-2 text-sm text-gray-700">Active</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="radio" name="status" value="draft" class="text-blue-600 focus:ring-blue-500">
                                        <span class="ml-2 text-sm text-gray-700">Draft</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="radio" name="status" value="archived" class="text-blue-600 focus:ring-blue-500">
                                        <span class="ml-2 text-sm text-gray-700">Archived</span>
                                    </label>
                                </div>
                            </div>
                            
                            <!-- Categories -->
                            <div>
                                <h4 class="text-sm font-medium text-gray-900 mb-3">Product Type</h4>
                                <input type="text" value="Accessories" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            </div>
                            
                            <!-- Tags -->
                            <div>
                                <h4 class="text-sm font-medium text-gray-900 mb-3">Tags</h4>
                                <input type="text" value="sunglasses, accessories, fashion, UV protection" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                <p class="text-xs text-gray-500 mt-1">Separate tags with commas</p>
                            </div>
                            
                            <!-- SEO -->
                            <div>
                                <h4 class="text-sm font-medium text-gray-900 mb-3">Search Engine Listing</h4>
                                <div class="space-y-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Page Title</label>
                                        <input type="text" value="Elegante Solbriller for Alle - Premium Sunglasses" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                        <p class="text-xs text-gray-500 mt-1">60 characters recommended</p>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Meta Description</label>
                                        <textarea rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">Premium sunglasses with UV protection. Elegant design for every occasion. Shop now at Clipia Germany.</textarea>
                                        <p class="text-xs text-gray-500 mt-1">160 characters recommended</p>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Quick Actions -->
                            <div>
                                <h4 class="text-sm font-medium text-gray-900 mb-3">Quick Actions</h4>
                                <div class="space-y-2">
                                    <button class="w-full inline-flex items-center justify-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50">
                                        <i data-lucide="copy" class="w-4 h-4 mr-2"></i>
                                        Duplicate Product
                                    </button>
                                    <button class="w-full inline-flex items-center justify-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50">
                                        <i data-lucide="refresh-cw" class="w-4 h-4 mr-2"></i>
                                        Sync with Shopify
                                    </button>
                                    <button class="w-full inline-flex items-center justify-center px-4 py-2 border border-red-300 text-sm font-medium rounded-lg text-red-700 bg-white hover:bg-red-50">
                                        <i data-lucide="trash-2" class="w-4 h-4 mr-2"></i>
                                        Delete Product
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Product History -->
                            <div>
                                <h4 class="text-sm font-medium text-gray-900 mb-3">Recent Changes</h4>
                                <div class="space-y-3">
                                    <div class="text-xs text-gray-500">
                                        <div class="font-medium text-gray-900">Price updated</div>
                                        <div>5 minutes ago by Admin</div>
                                    </div>
                                    <div class="text-xs text-gray-500">
                                        <div class="font-medium text-gray-900">Inventory adjusted</div>
                                        <div>1 hour ago by System</div>
                                    </div>
                                    <div class="text-xs text-gray-500">
                                        <div class="font-medium text-gray-900">Description updated</div>
                                        <div>2 days ago by Admin</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>
    
    <script>
        lucide.createIcons();
        
        // Load available templates
        async function loadAvailableTemplates() {
            try {
                const response = await fetch('/admin-v2/templates');
                const data = await response.json();
                
                const selector = document.getElementById('template-selector');
                selector.innerHTML = '<option value="">No template selected</option>';
                
                if (data.success && data.templates) {
                    data.templates.forEach(template => {
                        const option = document.createElement('option');
                        option.value = template.id;
                        option.textContent = template.name;
                        selector.appendChild(option);
                    });
                }
            } catch (error) {
                console.error('Error loading templates:', error);
            }
        }
        
        // Load existing template assignment for this product
        async function loadExistingTemplate() {
            try {
                const pathParts = window.location.pathname.split('/');
                const productHandle = pathParts[pathParts.length - 2]; // Get the handle before '/edit'
                const response = await fetch(`/admin-v2/products/${productHandle}/template`);
                const data = await response.json();
                
                if (data.success && data.assignment) {
                    console.log('Loading existing assignment:', data.assignment);
                    
                    // Set the template selector
                    const selector = document.getElementById('template-selector');
                    selector.value = data.assignment.template_id;
                    
                    // Load the template and wait for it to complete
                    await loadTemplate();
                    
                    // Give a small delay to ensure template fields are rendered
                    await new Promise(resolve => setTimeout(resolve, 100));
                    
                    // Populate the field values if they exist
                    if (data.assignment.template_data) {
                        const templateData = JSON.parse(data.assignment.template_data);
                        console.log('Populating field data:', templateData);
                        
                        Object.keys(templateData).forEach(fieldId => {
                            const input = document.getElementById(fieldId);
                            if (input) {
                                if (input.type === 'checkbox') {
                                    input.checked = templateData[fieldId];
                                } else {
                                    input.value = templateData[fieldId];
                                }
                                console.log('Set field', fieldId, 'to', templateData[fieldId]);
                            } else {
                                console.warn('Field not found:', fieldId);
                            }
                        });
                    }
                } else {
                    console.log('No existing template assignment found');
                }
            } catch (error) {
                console.error('Error loading existing template:', error);
            }
        }
        
        // Initialize on page load
        document.addEventListener('DOMContentLoaded', async function() {
            await loadAvailableTemplates();
            await loadExistingTemplate();
        });
        
        // Load template when selected
        async function loadTemplate() {
            const selector = document.getElementById('template-selector');
            const templateId = selector.value;
            const preview = document.getElementById('template-preview');
            
            if (!templateId) {
                preview.classList.add('hidden');
                return;
            }
            
            try {
                // Fetch template details
                const response = await fetch(`/admin-v2/templates/${templateId}`);
                const data = await response.json();
                
                if (data.success && data.template) {
                    const template = data.template;
                    
                    // Show preview
                    preview.classList.remove('hidden');
                    document.getElementById('template-description').textContent = 
                        `Template: ${template.name}${template.description ? ' - ' + template.description : ''}`;
                    
                    // Generate template fields
                    generateTemplateFields(template);
                } else {
                    console.error('Failed to load template:', data.error);
                }
            } catch (error) {
                console.error('Error loading template:', error);
                preview.classList.remove('hidden');
                document.getElementById('template-description').textContent = 
                    `Template selected: ${selector.options[selector.selectedIndex].text}. Error loading configuration.`;
            }
        }
        
        // Generate template-specific fields
        function generateTemplateFields(template) {
            const fieldsContainer = document.getElementById('template-fields');
            let elements;
            
            try {
                elements = typeof template.elements === 'string' ? JSON.parse(template.elements) : template.elements;
            } catch (e) {
                console.error('Error parsing template elements:', e);
                fieldsContainer.innerHTML = '<p class="text-sm text-red-600">Error loading template configuration</p>';
                return;
            }
            
            let fieldsHTML = '';
            
            if (Array.isArray(elements)) {
                elements.forEach((element, index) => {
                    fieldsHTML += generateFieldHTML(element, index);
                });
            }
            
            if (!fieldsHTML) {
                fieldsHTML = '<p class="text-sm text-gray-500">This template has no configurable fields.</p>';
            }
            
            fieldsContainer.innerHTML = fieldsHTML;
        }
        
        // Generate HTML for individual template fields
        function generateFieldHTML(element, index) {
            const fieldMap = {
                'FreeShippingBar': {
                    title: 'Free Shipping Message',
                    fields: [
                        { name: 'message', label: 'Shipping Message', type: 'text', placeholder: 'Free shipping on orders over $50!' }
                    ]
                },
                'FlashSaleCountdown': {
                    title: 'Flash Sale Timer',
                    fields: [
                        { name: 'end_date', label: 'Sale End Date', type: 'datetime-local' },
                        { name: 'title', label: 'Sale Title', type: 'text', placeholder: 'Limited Time Offer!' }
                    ]
                },
                'ProductTitle': {
                    title: 'Product Title Settings',
                    fields: [
                        { name: 'subtitle', label: 'Subtitle', type: 'text', placeholder: 'Optional subtitle' }
                    ]
                },
                'PricingSection': {
                    title: 'Pricing Display',
                    fields: [
                        { name: 'show_savings', label: 'Show Savings Amount', type: 'checkbox' },
                        { name: 'currency_symbol', label: 'Currency Symbol', type: 'text', placeholder: '$' }
                    ]
                },
                'FreeTextField': {
                    title: 'Custom Text Content',
                    fields: [
                        { name: 'content', label: 'Text Content', type: 'textarea', placeholder: 'Enter your custom text here...' }
                    ]
                },
                'ListSection': {
                    title: 'Feature List',
                    fields: [
                        { name: 'title', label: 'List Title', type: 'text', placeholder: 'Key Features' },
                        { name: 'items', label: 'List Items (one per line)', type: 'textarea', placeholder: 'Feature 1\nFeature 2\nFeature 3' }
                    ]
                },
                'GuaranteeBadge': {
                    title: 'Guarantee Information',
                    fields: [
                        { name: 'guarantee_text', label: 'Guarantee Text', type: 'text', placeholder: '30-Day Money Back Guarantee' }
                    ]
                },
                'ScarcityNotice': {
                    title: 'Urgency Message',
                    fields: [
                        { name: 'message', label: 'Scarcity Message', type: 'text', placeholder: 'Only 3 left in stock!' }
                    ]
                }
            };
            
            const config = fieldMap[element];
            if (!config) return '';
            
            let html = `<div class="bg-gray-50 p-4 rounded-lg">`;
            html += `<h5 class="font-medium text-gray-900 mb-3">${config.title}</h5>`;
            
            config.fields.forEach((field, fieldIndex) => {
                const fieldId = `template_${element}_${field.name}`;
                
                html += `<div class="mb-3">`;
                html += `<label for="${fieldId}" class="block text-sm font-medium text-gray-700 mb-1">${field.label}</label>`;
                
                if (field.type === 'textarea') {
                    html += `<textarea id="${fieldId}" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" rows="3" placeholder="${field.placeholder || ''}"></textarea>`;
                } else if (field.type === 'checkbox') {
                    html += `<div class="flex items-center">`;
                    html += `<input type="checkbox" id="${fieldId}" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">`;
                    html += `<label for="${fieldId}" class="ml-2 text-sm text-gray-700">${field.label}</label>`;
                    html += `</div>`;
                } else {
                    html += `<input type="${field.type}" id="${fieldId}" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="${field.placeholder || ''}">`;
                }
                
                html += `</div>`;
            });
            
            html += `</div>`;
            return html;
        }
        
        // Save product with template data
        async function saveProduct() {
            const saveBtn = event.target;
            const originalText = saveBtn.innerHTML;
            
            try {
                // Show loading state
                saveBtn.innerHTML = '<i data-lucide="loader-2" class="w-4 h-4 mr-2 animate-spin"></i>Saving...';
                saveBtn.disabled = true;
                
                // Get selected template
                const templateSelector = document.getElementById('template-selector');
                const templateId = templateSelector.value;
                
                // Collect template field data
                const templateData = {};
                if (templateId) {
                    const templateFields = document.getElementById('template-fields');
                    const inputs = templateFields.querySelectorAll('input, textarea, select');
                    
                    inputs.forEach(input => {
                        if (input.type === 'checkbox') {
                            templateData[input.id] = input.checked;
                        } else {
                            templateData[input.id] = input.value;
                        }
                    });
                }
                
                // Save to backend
                const pathParts = window.location.pathname.split('/');
                const productHandle = pathParts[pathParts.length - 2]; // Get the handle before '/edit'
                const response = await fetch(`/admin-v2/products/${productHandle}/template`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        templateId: templateId || null,
                        templateData: templateData
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Show success message
                    const successMsg = document.createElement('div');
                    successMsg.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50';
                    successMsg.innerHTML = '<i data-lucide="check-circle" class="w-4 h-4 inline mr-2"></i>Product saved successfully!';
                    document.body.appendChild(successMsg);
                    
                    // Remove message after 3 seconds
                    setTimeout(() => {
                        successMsg.remove();
                    }, 3000);
                } else {
                    alert('Failed to save product: ' + result.error);
                }
            } catch (error) {
                console.error('Error saving product:', error);
                alert('Error saving product: ' + error.message);
            } finally {
                // Restore button
                saveBtn.innerHTML = originalText;
                saveBtn.disabled = false;
                lucide.createIcons();
            }
        }

        async function deployProduct() {
            const deployBtn = document.querySelector('.deploy-product-btn');
            const originalText = deployBtn.innerHTML;
            
            try {
                // Show loading state
                deployBtn.innerHTML = '<i data-lucide="loader" class="w-4 h-4 mr-2 animate-spin"></i>Deploying...';
                deployBtn.disabled = true;
                
                // Get product handle from URL
                const pathParts = window.location.pathname.split('/');
                const productHandle = pathParts[pathParts.length - 2];
                
                const response = await fetch(`/admin-v2/products/${productHandle}/deploy`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Show success message with live URL
                    const successMsg = document.createElement('div');
                    successMsg.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg z-50 max-w-md';
                    successMsg.innerHTML = `
                        <div class="flex items-start">
                            <i data-lucide="check-circle" class="w-5 h-5 mr-3 mt-0.5"></i>
                            <div>
                                <div class="font-semibold">Deployed Successfully!</div>
                                <div class="text-sm mt-1">
                                    Live URL: <a href="${result.liveUrl}" target="_blank" class="underline hover:no-underline">${result.liveUrl}</a>
                                </div>
                            </div>
                        </div>
                    `;
                    document.body.appendChild(successMsg);
                    
                    // Remove message after 8 seconds
                    setTimeout(() => {
                        successMsg.remove();
                    }, 8000);
                    
                    lucide.createIcons();
                } else {
                    // Show error message
                    const errorMsg = document.createElement('div');
                    errorMsg.className = 'fixed top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50';
                    errorMsg.innerHTML = '<i data-lucide="alert-circle" class="w-4 h-4 inline mr-2"></i>Deployment failed: ' + result.error;
                    document.body.appendChild(errorMsg);
                    
                    setTimeout(() => {
                        errorMsg.remove();
                    }, 5000);
                    
                    lucide.createIcons();
                }
            } catch (error) {
                console.error('Error deploying product:', error);
                
                const errorMsg = document.createElement('div');
                errorMsg.className = 'fixed top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50';
                errorMsg.innerHTML = '<i data-lucide="alert-circle" class="w-4 h-4 inline mr-2"></i>Error: ' + error.message;
                document.body.appendChild(errorMsg);
                
                setTimeout(() => {
                    errorMsg.remove();
                }, 5000);
                
                lucide.createIcons();
            } finally {
                // Restore button
                deployBtn.innerHTML = originalText;
                deployBtn.disabled = false;
                lucide.createIcons();
            }
        }
    </script>
</body>
</html>