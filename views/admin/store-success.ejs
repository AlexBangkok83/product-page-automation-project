<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Store Creation Progress - <%= storeName || 'New Store' %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .success-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            width: 100%;
            max-width: 600px;
            margin: 20px;
        }

        .header {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            padding: 30px;
            text-align: center;
            position: relative;
        }

        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle fill="rgba(255,255,255,0.1)" cx="20" cy="20" r="2"/><circle fill="rgba(255,255,255,0.1)" cx="80" cy="30" r="1.5"/><circle fill="rgba(255,255,255,0.1)" cx="40" cy="70" r="1"/><circle fill="rgba(255,255,255,0.1)" cx="90" cy="80" r="2.5"/></svg>');
        }

        .header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin: 0;
            position: relative;
            z-index: 1;
        }

        .progress-container {
            padding: 40px;
        }

        .step {
            display: flex;
            align-items: center;
            margin-bottom: 25px;
            padding: 20px;
            border-radius: 15px;
            background: #f8f9fa;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .step.active {
            background: #e3f2fd;
            border-color: #2196f3;
            box-shadow: 0 5px 15px rgba(33, 150, 243, 0.2);
        }

        .step.completed {
            background: #e8f5e8;
            border-color: #28a745;
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.2);
        }

        .step-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 20px;
            font-size: 1.2rem;
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .step.pending .step-icon {
            background: #e9ecef;
            color: #6c757d;
        }

        .step.active .step-icon {
            background: #2196f3;
            color: white;
        }

        .step.completed .step-icon {
            background: #28a745;
            color: white;
        }

        .step-content {
            flex: 1;
        }

        .step-title {
            font-weight: 600;
            font-size: 1.1rem;
            margin-bottom: 5px;
        }

        .step-description {
            color: #6c757d;
            font-size: 0.9rem;
        }

        .step.active .step-description {
            color: #1976d2;
        }

        .step.completed .step-description {
            color: #1e7e34;
        }

        .spinner {
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-top: 3px solid #fff;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .pulse {
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        .final-success {
            text-align: center;
            padding: 30px;
            display: none;
        }

        .final-success.show {
            display: block;
        }

        .success-icon {
            font-size: 4rem;
            color: #28a745;
            margin-bottom: 20px;
            animation: bounce 1s;
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-10px); }
            60% { transform: translateY(-5px); }
        }

        .btn-custom {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            color: white;
            padding: 12px 30px;
            border-radius: 50px;
            font-weight: 600;
            text-decoration: none;
            display: inline-block;
            transition: transform 0.3s ease;
        }

        .btn-custom:hover {
            transform: translateY(-2px);
            color: white;
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }

        .store-info {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-top: 20px;
        }

        .info-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .info-label {
            font-weight: 600;
            color: #495057;
        }

        .info-value {
            color: #6c757d;
            font-family: monospace;
        }
    </style>
</head>
<body>
    <div class="success-card">
        <div class="header">
            <h1>🚀 Creating Your Store</h1>
            <p class="mb-0">Setting up <strong><%= storeName || 'your new store' %></strong></p>
        </div>

        <div class="progress-container" id="progressContainer">
            <div class="step pending" id="step1">
                <div class="step-icon">
                    <span class="step-number">1</span>
                    <div class="spinner" style="display: none;"></div>
                </div>
                <div class="step-content">
                    <div class="step-title">Creating Store Record</div>
                    <div class="step-description">Setting up your store in the database...</div>
                </div>
            </div>

            <div class="step pending" id="step2">
                <div class="step-icon">
                    <span class="step-number">2</span>
                    <div class="spinner" style="display: none;"></div>
                </div>
                <div class="step-content">
                    <div class="step-title">Generating Store Files</div>
                    <div class="step-description">Creating your custom store pages and assets...</div>
                </div>
            </div>

            <div class="step pending" id="step3">
                <div class="step-icon">
                    <span class="step-number">3</span>
                    <div class="spinner" style="display: none;"></div>
                </div>
                <div class="step-content">
                    <div class="step-title">Setting Up Domain</div>
                    <div class="step-description">Configuring your custom domain...</div>
                </div>
            </div>

            <div class="step pending" id="step4">
                <div class="step-icon">
                    <span class="step-number">4</span>
                    <div class="spinner" style="display: none;"></div>
                </div>
                <div class="step-content">
                    <div class="step-title">Pushing to Git</div>
                    <div class="step-description">Saving your store files to version control...</div>
                </div>
            </div>

            <div class="step pending" id="step5">
                <div class="step-icon">
                    <span class="step-number">5</span>
                    <div class="spinner" style="display: none;"></div>
                </div>
                <div class="step-content">
                    <div class="step-title">Deploying to Vercel</div>
                    <div class="step-description">Making your store live on the internet...</div>
                </div>
            </div>
        </div>

        <div class="final-success" id="finalSuccess">
            <div class="success-icon">
                <i class="bi bi-check-circle-fill"></i>
            </div>
            <h2>🎉 Store Created Successfully!</h2>
            <p class="mb-4">Your store is now live and ready to use!</p>

            <div class="store-info">
                <div class="info-item">
                    <span class="info-label">Store Name:</span>
                    <span class="info-value"><%= storeName || 'New Store' %></span>
                </div>
                <div class="info-item">
                    <span class="info-label">Domain:</span>
                    <span class="info-value" id="storeDomain"><%= domain || 'Loading...' %></span>
                </div>
                <div class="info-item">
                    <span class="info-label">Live URL:</span>
                    <span class="info-value">
                        <a href="https://<%= domain || '#' %>" target="_blank" id="liveUrl">
                            https://<%= domain || 'Loading...' %>
                        </a>
                    </span>
                </div>
            </div>

            <div class="mt-4">
                <a href="https://<%= domain || '#' %>" target="_blank" class="btn btn-custom me-3" id="visitStoreBtn">
                    <i class="bi bi-box-arrow-up-right me-2"></i>Visit Your Store
                </a>
                <a href="/admin" class="btn btn-outline-secondary">
                    <i class="bi bi-house me-2"></i>Back to Dashboard
                </a>
            </div>
        </div>
    </div>

    <script>
        // Store creation progress simulation
        class StoreCreationProgress {
            constructor() {
                this.currentStep = 0;
                this.steps = [
                    { id: 'step1', duration: 1500, title: 'Creating Store Record', description: 'Setting up your store in the database...' },
                    { id: 'step2', duration: 2500, title: 'Generating Store Files', description: 'Creating your custom store pages and assets...' },
                    { id: 'step3', duration: 2000, title: 'Setting Up Domain', description: 'Configuring your custom domain...' },
                    { id: 'step4', duration: 3000, title: 'Pushing to Git', description: 'Saving your store files to version control...' },
                    { id: 'step5', duration: 3500, title: 'Deploying to Vercel', description: 'Making your store live on the internet...' }
                ];
                this.storeData = <%= JSON.stringify({ name: storeName, domain: domain, uuid: storeId }) %>;
            }

            async start() {
                console.log('🚀 Starting store creation progress animation...');
                
                // Since the store is already created (we're on the success page), 
                // we just simulate the progress animation
                try {
                    // Start visual progress immediately
                    await this.simulateProgress();
                    
                    // Show final success
                    this.showFinalSuccess(this.storeData);
                } catch (error) {
                    console.error('❌ Progress animation failed:', error);
                    this.showError(error.message);
                }
            }

            async simulateProgress() {
                for (let i = 0; i < this.steps.length; i++) {
                    await this.processStep(this.steps[i], i);
                }
            }

            async processStep(step, index) {
                const stepElement = document.getElementById(step.id);
                const spinner = stepElement.querySelector('.spinner');
                const stepNumber = stepElement.querySelector('.step-number');
                const icon = stepElement.querySelector('.step-icon');
                const titleElement = stepElement.querySelector('.step-title');
                const descriptionElement = stepElement.querySelector('.step-description');

                // Update step content
                titleElement.textContent = step.title;
                descriptionElement.textContent = step.description;

                // Activate step
                stepElement.classList.remove('pending');
                stepElement.classList.add('active');
                stepNumber.style.display = 'none';
                spinner.style.display = 'block';

                // Add pulse animation
                icon.classList.add('pulse');

                // Wait for step duration
                await new Promise(resolve => setTimeout(resolve, step.duration));

                // Complete step
                stepElement.classList.remove('active');
                stepElement.classList.add('completed');
                spinner.style.display = 'none';
                stepNumber.style.display = 'block';
                stepNumber.innerHTML = '<i class="bi bi-check"></i>';
                icon.classList.remove('pulse');

                console.log(`✅ Step ${index + 1} completed: ${step.title}`);
            }

            showFinalSuccess(storeData) {
                // Hide progress container
                document.getElementById('progressContainer').style.display = 'none';
                
                // Update store information
                if (storeData) {
                    document.getElementById('storeDomain').textContent = storeData.domain;
                    document.getElementById('liveUrl').href = `https://${storeData.domain}`;
                    document.getElementById('liveUrl').textContent = `https://${storeData.domain}`;
                    document.getElementById('visitStoreBtn').href = `https://${storeData.domain}`;
                }
                
                // Show final success
                document.getElementById('finalSuccess').classList.add('show');
            }

            showError(message) {
                // TODO: Show error state
                console.error('Error:', message);
            }

            getFormDataFromStorage() {
                // Get form data from sessionStorage if available
                const formData = sessionStorage.getItem('storeFormData');
                return formData ? JSON.parse(formData) : {};
            }
        }

        // Start progress when page loads
        document.addEventListener('DOMContentLoaded', () => {
            const progress = new StoreCreationProgress();
            // Small delay for better UX
            setTimeout(() => progress.start(), 1000);
        });
    </script>
</body>
</html>