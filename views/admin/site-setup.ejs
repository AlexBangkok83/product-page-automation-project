<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .site-setup-container {
            min-height: 100vh;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 2rem 0;
        }
        
        .setup-card {
            max-width: 900px;
            margin: 0 auto;
            border-radius: 1.5rem;
            box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.15);
            border: none;
            overflow: hidden;
        }
        
        .setup-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem;
            text-align: center;
            border-radius: 0;
        }
        
        .setup-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }
        
        .setup-header p {
            font-size: 1.1rem;
            opacity: 0.9;
            margin-bottom: 0;
        }
        
        .progress-section {
            background: rgba(102, 126, 234, 0.05);
            padding: 2rem;
            border-bottom: 1px solid #e9ecef;
        }
        
        .progress-steps {
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: relative;
            margin: 0;
        }
        
        .step-connector {
            position: absolute;
            top: 30px;
            left: 60px;
            right: 60px;
            height: 3px;
            background: #e9ecef;
            z-index: 1;
        }
        
        .step-connector-progress {
            height: 100%;
            background: var(--success-color);
            transition: width 0.5s ease;
            width: 0%;
        }
        
        .form-section {
            padding: 3rem;
        }
        
        .form-step {
            display: none;
        }
        
        .form-step.active {
            display: block;
            animation: fadeInUp 0.5s ease-out;
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .form-floating {
            margin-bottom: 1.5rem;
        }
        
        .form-floating label {
            color: #6c757d;
        }
        
        .form-control:focus,
        .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        
        .auto-detect-results {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
            border-left: 4px solid #667eea;
            border-radius: 0.75rem;
            padding: 1.5rem;
            margin: 1.5rem 0;
        }
        
        .shopify-status {
            background: linear-gradient(135deg, rgba(25, 135, 84, 0.1) 0%, rgba(34, 197, 94, 0.1) 100%);
            border-left: 4px solid var(--success-color);
            border-radius: 0.75rem;
            padding: 1.5rem;
            margin: 1.5rem 0;
        }
        
        .page-template-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            margin: 2rem 0;
        }
        
        .page-template-card {
            position: relative;
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 1rem;
            padding: 2rem;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
        
        .page-template-card:hover {
            border-color: #667eea;
            transform: translateY(-8px);
            box-shadow: 0 1rem 2rem rgba(102, 126, 234, 0.15);
        }
        
        .page-template-card.selected {
            border-color: #667eea;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
        }
        
        .page-template-card.required {
            border-color: var(--success-color);
            background: linear-gradient(135deg, rgba(25, 135, 84, 0.05) 0%, rgba(34, 197, 94, 0.05) 100%);
        }
        
        .template-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: #667eea;
        }
        
        .page-template-card.required .template-icon {
            color: var(--success-color);
        }
        
        .global-settings-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin: 2rem 0;
        }
        
        .settings-section {
            background: #f8f9fa;
            border-radius: 1rem;
            padding: 2rem;
        }
        
        .settings-section h5 {
            color: #495057;
            margin-bottom: 1.5rem;
            font-weight: 600;
        }
        
        .step-navigation {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 3rem;
            padding-top: 2rem;
            border-top: 1px solid #e9ecef;
        }
        
        .btn-step {
            padding: 0.75rem 2rem;
            font-weight: 600;
            border-radius: 0.75rem;
            min-width: 120px;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
        }
        
        .btn-primary:hover {
            background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
            transform: translateY(-2px);
            box-shadow: 0 0.5rem 1rem rgba(102, 126, 234, 0.3);
        }
        
        .completion-summary {
            text-align: center;
            padding: 3rem 2rem;
        }
        
        .completion-icon {
            font-size: 4rem;
            color: var(--success-color);
            margin-bottom: 2rem;
        }

        .store-info-card {
            background: linear-gradient(135deg, rgba(25, 135, 84, 0.1) 0%, rgba(34, 197, 94, 0.1) 100%);
            border-left: 4px solid var(--success-color);
            border-radius: 0.75rem;
            padding: 2rem;
            margin: 2rem 0;
            text-align: left;
        }

        .store-info-card h5 {
            color: var(--success-color);
            margin-bottom: 1rem;
        }

        .store-info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
        }

        .info-item {
            background: rgba(255, 255, 255, 0.8);
            padding: 1rem;
            border-radius: 0.5rem;
        }

        .info-item strong {
            color: #495057;
            display: block;
            margin-bottom: 0.25rem;
        }
        
        @media (max-width: 768px) {
            .progress-steps {
                display: none;
            }
            
            .form-section {
                padding: 2rem;
            }
            
            .page-template-grid {
                grid-template-columns: 1fr;
            }
            
            .global-settings-grid {
                grid-template-columns: 1fr;
            }
            
            .step-navigation {
                flex-direction: column;
                gap: 1rem;
            }
            
            .btn-step {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="site-setup-container">
        <div class="container">
            <div class="card setup-card">
                <!-- Header -->
                <div class="setup-header">
                    <h1><i class="bi bi-rocket-takeoff me-3"></i>Create Your Store</h1>
                    <p>Launch your e-commerce empire in just a few simple steps</p>
                </div>

                <!-- Progress Indicator -->
                <div class="progress-section">
                    <div class="progress-steps">
                        <div class="step-connector">
                            <div class="step-connector-progress" id="progressBar"></div>
                        </div>
                        
                        <div class="step active" data-step="1">
                            <div class="step-circle">
                                <i class="bi bi-info-circle"></i>
                            </div>
                            <div class="step-label">Basic Info</div>
                        </div>
                        
                        <div class="step" data-step="2">
                            <div class="step-circle">
                                <i class="bi bi-shop"></i>
                            </div>
                            <div class="step-label">Shopify Connect</div>
                        </div>
                        
                        <div class="step" data-step="3">
                            <div class="step-circle">
                                <i class="bi bi-grid-3x3"></i>
                            </div>
                            <div class="step-label">Page Selection</div>
                        </div>
                        
                        <div class="step" data-step="4">
                            <div class="step-circle">
                                <i class="bi bi-gear"></i>
                            </div>
                            <div class="step-label">Global Settings</div>
                        </div>
                        
                        <div class="step" data-step="5">
                            <div class="step-circle">
                                <i class="bi bi-check-circle"></i>
                            </div>
                            <div class="step-label">Complete</div>
                        </div>
                    </div>
                </div>

                <!-- Form Content -->
                <div class="form-section">
                    <form id="siteSetupForm" method="POST" action="/admin/site-setup">
                        <input type="hidden" name="step" value="create-store">
                        <input type="hidden" name="storeId" value="<%= storeId || '' %>">

                        <!-- Step 1: Basic Information -->
                        <div class="form-step active" id="step1">
                            <div class="row">
                                <div class="col-12">
                                    <h3 class="mb-4">
                                        <i class="bi bi-info-circle text-primary me-2"></i>
                                        Basic Store Information
                                    </h3>
                                    <p class="text-muted mb-4">Let's start with the essentials. We'll auto-detect location settings based on your domain.</p>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control form-control-lg" id="siteUrl" name="domain" 
                                               placeholder="https://mystore.com" data-required="true">
                                        <label for="siteUrl">
                                            <i class="bi bi-globe me-2"></i>Website URL
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control form-control-lg" id="storeName" name="storeName" 
                                               placeholder="My Awesome Store" required>
                                        <label for="storeName">
                                            <i class="bi bi-shop me-2"></i>Brand Name
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <!-- Auto-Detection Results -->
                            <div id="autoDetectionResults" class="auto-detect-results d-none">
                                <h5><i class="bi bi-magic me-2"></i>Auto-Detected Settings</h5>
                                <div class="row">
                                    <div class="col-md-4">
                                        <strong>Country:</strong> <span id="detectedCountry">-</span>
                                    </div>
                                    <div class="col-md-4">
                                        <strong>Currency:</strong> <span id="detectedCurrency">-</span>
                                    </div>
                                    <div class="col-md-4">
                                        <strong>Language:</strong> <span id="detectedLanguage">-</span>
                                    </div>
                                </div>
                                <small class="text-muted mt-2 d-block">
                                    <i class="bi bi-info-circle me-1"></i>
                                    You can modify these settings below if needed.
                                </small>
                            </div>

                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <select class="form-select form-control-lg" id="country" name="country" required>
                                            <option value="">Select Country</option>
                                            <option value="US">United States</option>
                                            <option value="CA">Canada</option>
                                            <option value="GB">United Kingdom</option>
                                            <option value="DE">Germany</option>
                                            <option value="FR">France</option>
                                            <option value="SE">Sweden</option>
                                            <option value="FI">Finland</option>
                                            <option value="AU">Australia</option>
                                            <option value="NZ">New Zealand</option>
                                        </select>
                                        <label for="country">
                                            <i class="bi bi-flag me-2"></i>Country
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <select class="form-select form-control-lg" id="currency" name="currency" required>
                                            <option value="">Select Currency</option>
                                            <option value="USD">USD - US Dollar</option>
                                            <option value="CAD">CAD - Canadian Dollar</option>
                                            <option value="GBP">GBP - British Pound</option>
                                            <option value="EUR">EUR - Euro</option>
                                            <option value="SEK">SEK - Swedish Krona</option>
                                            <option value="AUD">AUD - Australian Dollar</option>
                                            <option value="NZD">NZD - New Zealand Dollar</option>
                                        </select>
                                        <label for="currency">
                                            <i class="bi bi-currency-dollar me-2"></i>Currency
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating">
                                        <select class="form-select form-control-lg" id="language" name="language" required>
                                            <option value="">Select Language</option>
                                            <option value="en">English</option>
                                            <option value="fr">French</option>
                                            <option value="de">German</option>
                                            <option value="sv">Swedish</option>
                                            <option value="fi">Finnish</option>
                                            <option value="es">Spanish</option>
                                        </select>
                                        <label for="language">
                                            <i class="bi bi-translate me-2"></i>Language
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" id="metaTitle" name="metaTitle" 
                                               placeholder="SEO title for your store" maxlength="60">
                                        <label for="metaTitle">
                                            <i class="bi bi-search me-2"></i>SEO Title (Optional)
                                        </label>
                                        <div class="form-text">Recommended: 50-60 characters</div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating">
                                        <textarea class="form-control" id="metaDescription" name="metaDescription" 
                                                  placeholder="Brief description of your store" maxlength="160" style="height: 100px;"></textarea>
                                        <label for="metaDescription">
                                            <i class="bi bi-card-text me-2"></i>SEO Description (Optional)
                                        </label>
                                        <div class="form-text">Recommended: 150-160 characters</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Step 2: Shopify Connection -->
                        <div class="form-step" id="step2">
                            <div class="row">
                                <div class="col-12">
                                    <h3 class="mb-4">
                                        <i class="bi bi-shop text-primary me-2"></i>
                                        Shopify Integration
                                    </h3>
                                    <p class="text-muted mb-4">Choose from your saved Shopify stores or add a new connection.</p>
                                </div>
                            </div>

                            <!-- Saved Stores Selection -->
                            <div id="savedStoresSection">
                                <div class="row">
                                    <div class="col-12">
                                        <div class="form-floating mb-3">
                                            <select class="form-select form-control-lg" id="savedShopifyStores" name="savedShopifyStore">
                                                <option value="">Select a saved Shopify store...</option>
                                                <option value="new">Add New Shopify Store</option>
                                            </select>
                                            <label for="savedShopifyStores">
                                                <i class="bi bi-bookmark me-2"></i>Saved Shopify Stores
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <!-- Selected Store Info -->
                                <div id="selectedStoreInfo" class="shopify-status d-none">
                                    <h5><i class="bi bi-check-circle-fill me-2"></i>Selected Store</h5>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <strong>Shop Name:</strong> <span id="selectedShopName">-</span>
                                        </div>
                                        <div class="col-md-4">
                                            <strong>Domain:</strong> <span id="selectedDomain">-</span>
                                        </div>
                                        <div class="col-md-4">
                                            <strong>Products:</strong> <span id="selectedProductCount">-</span>
                                        </div>
                                    </div>
                                    <small class="text-muted mt-2 d-block">
                                        <i class="bi bi-info-circle me-1"></i>
                                        This store's products will be automatically synced to your new store.
                                    </small>
                                </div>

                                <div class="text-center my-4">
                                    <button type="button" class="btn btn-outline-primary" onclick="window.open('/admin/company-profile', '_blank')">
                                        <i class="bi bi-gear me-2"></i>Manage Shopify Stores
                                    </button>
                                </div>
                            </div>

                            <!-- Manual Entry Section -->
                            <div id="manualEntrySection" style="display: none;">
                                <div class="alert alert-info">
                                    <h6><i class="bi bi-info-circle me-2"></i>Adding New Shopify Store</h6>
                                    <p class="mb-2">This store will be saved to your company profile for future use.</p>
                                </div>

                                <div class="row">
                                    <div class="col-12">
                                        <div class="form-floating mb-3">
                                            <input type="text" class="form-control form-control-lg" id="newStoreNickname" name="newStoreNickname" 
                                                   placeholder="My Store">
                                            <label for="newStoreNickname">
                                                <i class="bi bi-tag me-2"></i>Store Nickname
                                            </label>
                                            <div class="form-text">A friendly name to identify this store</div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="text" class="form-control form-control-lg" id="shopifyDomain" name="shopifyDomain" 
                                                   placeholder="mystore.myshopify.com" value="ecominter.myshopify.com">
                                            <label for="shopifyDomain">
                                                <i class="bi bi-shop me-2"></i>Shopify Domain
                                            </label>
                                            <div class="form-text">Enter your Shopify store domain (e.g., mystore.myshopify.com)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="password" class="form-control form-control-lg" id="shopifyToken" name="shopifyToken" 
                                                   placeholder="shpat_xxxxxxxxxxxxx" value="fake-token-for-testing">
                                            <label for="shopifyToken">
                                                <i class="bi bi-key me-2"></i>Access Token
                                            </label>
                                            <div class="form-text">Create a private app in your Shopify admin to get this token</div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-12">
                                        <button type="button" class="btn btn-outline-primary btn-lg" id="validateShopify">
                                            <i class="bi bi-shield-check me-2"></i>Test Connection
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- Shopify Status -->
                            <div id="shopifyStatus" class="shopify-status d-none">
                                <h5><i class="bi bi-check-circle-fill me-2"></i>Connection Successful!</h5>
                                <div class="row">
                                    <div class="col-md-6">
                                        <strong>Shop Name:</strong> <span id="shopName">-</span>
                                    </div>
                                    <div class="col-md-6">
                                        <strong>Products:</strong> <span id="productCount">-</span>
                                    </div>
                                </div>
                                <small class="text-muted mt-2 d-block">
                                    <i class="bi bi-info-circle me-1"></i>
                                    Your products will be automatically synced to your new store.
                                </small>
                            </div>

                            <div class="alert alert-info">
                                <h6><i class="bi bi-lightbulb me-2"></i>Need help setting up Shopify?</h6>
                                <p class="mb-2">Follow these steps to create a private app:</p>
                                <ol class="mb-0 small">
                                    <li>Go to your Shopify admin → Settings → Apps and sales channels</li>
                                    <li>Click "Develop apps" → "Create an app"</li>
                                    <li>Configure API scopes: read_products, read_orders, read_customers</li>
                                    <li>Generate and copy the access token</li>
                                </ol>
                            </div>
                        </div>

                        <!-- Step 3: Page Selection -->
                        <div class="form-step" id="step3">
                            <div class="row">
                                <div class="col-12">
                                    <h3 class="mb-4">
                                        <i class="bi bi-grid-3x3 text-primary me-2"></i>
                                        Choose Your Pages
                                    </h3>
                                    <p class="text-muted mb-4">Select which pages you'd like to include in your store. Essential pages are pre-selected.</p>
                                </div>
                            </div>

                            <div class="page-template-grid" id="pageTemplates">
                                <!-- Product Pages -->
                                <div class="page-template-card required" data-template-id="products">
                                    <div class="required-badge">Required</div>
                                    <div class="template-icon">
                                        <i class="bi bi-grid-3x3-gap"></i>
                                    </div>
                                    <div class="page-template-title">Product Pages</div>
                                    <div class="page-template-description">Beautiful product galleries with detailed descriptions</div>
                                    <div class="form-check mt-3">
                                        <input class="form-check-input" type="checkbox" id="template_products" 
                                               name="selectedPages[]" value="products" checked disabled>
                                    </div>
                                </div>

                                <!-- Home Page -->
                                <div class="page-template-card required" data-template-id="home">
                                    <div class="required-badge">Required</div>
                                    <div class="template-icon">
                                        <i class="bi bi-house-door"></i>
                                    </div>
                                    <div class="page-template-title">Homepage</div>
                                    <div class="page-template-description">Welcome visitors with a stunning landing page</div>
                                    <div class="form-check mt-3">
                                        <input class="form-check-input" type="checkbox" id="template_home" 
                                               name="selectedPages[]" value="home" checked disabled>
                                    </div>
                                </div>

                                <!-- About Page -->
                                <div class="page-template-card" data-template-id="about">
                                    <div class="template-icon">
                                        <i class="bi bi-info-circle"></i>
                                    </div>
                                    <div class="page-template-title">About Us</div>
                                    <div class="page-template-description">Tell your brand story and build trust</div>
                                    <div class="form-check mt-3">
                                        <input class="form-check-input" type="checkbox" id="template_about" 
                                               name="selectedPages[]" value="about">
                                    </div>
                                </div>

                                <!-- Contact Page -->
                                <div class="page-template-card" data-template-id="contact">
                                    <div class="template-icon">
                                        <i class="bi bi-envelope"></i>
                                    </div>
                                    <div class="page-template-title">Contact</div>
                                    <div class="page-template-description">Make it easy for customers to reach you</div>
                                    <div class="form-check mt-3">
                                        <input class="form-check-input" type="checkbox" id="template_contact" 
                                               name="selectedPages[]" value="contact">
                                    </div>
                                </div>

                                <!-- Blog -->
                                <div class="page-template-card" data-template-id="blog">
                                    <div class="template-icon">
                                        <i class="bi bi-journal-text"></i>
                                    </div>
                                    <div class="page-template-title">Blog</div>
                                    <div class="page-template-description">Share updates and engage your audience</div>
                                    <div class="form-check mt-3">
                                        <input class="form-check-input" type="checkbox" id="template_blog" 
                                               name="selectedPages[]" value="blog">
                                    </div>
                                </div>

                                <!-- FAQ -->
                                <div class="page-template-card" data-template-id="faq">
                                    <div class="template-icon">
                                        <i class="bi bi-question-circle"></i>
                                    </div>
                                    <div class="page-template-title">FAQ</div>
                                    <div class="page-template-description">Answer common customer questions</div>
                                    <div class="form-check mt-3">
                                        <input class="form-check-input" type="checkbox" id="template_faq" 
                                               name="selectedPages[]" value="faq">
                                    </div>
                                </div>

                                <!-- Terms & Conditions -->
                                <div class="page-template-card" data-template-id="terms">
                                    <div class="template-icon">
                                        <i class="bi bi-file-text"></i>
                                    </div>
                                    <div class="page-template-title">Terms & Conditions</div>
                                    <div class="page-template-description">Legal protection for your business</div>
                                    <div class="form-check mt-3">
                                        <input class="form-check-input" type="checkbox" id="template_terms" 
                                               name="selectedPages[]" value="terms">
                                    </div>
                                </div>

                                <!-- Privacy Policy -->
                                <div class="page-template-card" data-template-id="privacy">
                                    <div class="template-icon">
                                        <i class="bi bi-shield-check"></i>
                                    </div>
                                    <div class="page-template-title">Privacy Policy</div>
                                    <div class="page-template-description">GDPR compliance and data protection</div>
                                    <div class="form-check mt-3">
                                        <input class="form-check-input" type="checkbox" id="template_privacy" 
                                               name="selectedPages[]" value="privacy">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Step 4: Global Settings -->
                        <div class="form-step" id="step4">
                            <div class="row">
                                <div class="col-12">
                                    <h3 class="mb-4">
                                        <i class="bi bi-gear text-primary me-2"></i>
                                        Global Settings
                                    </h3>
                                    <p class="text-muted mb-4">Configure store-wide settings that will apply to all your pages.</p>
                                </div>
                            </div>

                            <div class="global-settings-grid">
                                <!-- Shipping Settings -->
                                <div class="settings-section">
                                    <h5><i class="bi bi-truck me-2"></i>Shipping Information</h5>
                                    <div class="form-floating mb-3">
                                        <textarea class="form-control" id="shippingInfo" name="shippingInfo" 
                                                  placeholder="Free shipping on orders over $50..." style="height: 100px;"></textarea>
                                        <label for="shippingInfo">Shipping Policy</label>
                                    </div>
                                    <div class="form-floating">
                                        <input type="text" class="form-control" id="shippingTime" name="shippingTime" 
                                               placeholder="3-5 business days">
                                        <label for="shippingTime">Delivery Time</label>
                                    </div>
                                </div>

                                <!-- Return Policy -->
                                <div class="settings-section">
                                    <h5><i class="bi bi-arrow-return-left me-2"></i>Return Policy</h5>
                                    <div class="form-floating mb-3">
                                        <textarea class="form-control" id="returnPolicy" name="returnPolicy" 
                                                  placeholder="30-day hassle-free returns..." style="height: 100px;"></textarea>
                                        <label for="returnPolicy">Return Policy</label>
                                    </div>
                                    <div class="form-floating">
                                        <input type="text" class="form-control" id="returnPeriod" name="returnPeriod" 
                                               placeholder="30 days">
                                        <label for="returnPeriod">Return Period</label>
                                    </div>
                                </div>

                                <!-- Customer Support -->
                                <div class="settings-section">
                                    <h5><i class="bi bi-headset me-2"></i>Customer Support</h5>
                                    <div class="form-floating mb-3">
                                        <input type="email" class="form-control" id="supportEmail" name="supportEmail" 
                                               placeholder="support@mystore.com">
                                        <label for="supportEmail">Support Email</label>
                                    </div>
                                    <div class="form-floating">
                                        <input type="tel" class="form-control" id="supportPhone" name="supportPhone" 
                                               placeholder="+1 (555) 123-4567">
                                        <label for="supportPhone">Support Phone</label>
                                    </div>
                                </div>

                                <!-- Legal Compliance -->
                                <div class="settings-section">
                                    <h5><i class="bi bi-shield-check me-2"></i>Legal Compliance</h5>
                                    <div class="form-check mb-3">
                                        <input class="form-check-input" type="checkbox" id="gdprCompliant" name="gdprCompliant">
                                        <label class="form-check-label" for="gdprCompliant">
                                            Enable GDPR compliance features
                                        </label>
                                    </div>
                                    <div class="form-check mb-3">
                                        <input class="form-check-input" type="checkbox" id="cookieConsent" name="cookieConsent">
                                        <label class="form-check-label" for="cookieConsent">
                                            Show cookie consent banner
                                        </label>
                                    </div>
                                    <div class="form-floating">
                                        <input type="text" class="form-control" id="businessAddress" name="businessAddress" 
                                               placeholder="123 Business St, City, Country">
                                        <label for="businessAddress">Business Address</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Step 5: Completion -->
                        <div class="form-step" id="step5">
                            <div class="completion-summary">
                                <div class="completion-icon">
                                    <i class="bi bi-check-circle-fill"></i>
                                </div>
                                <h2 class="mb-4">
                                    <% if (typeof store !== 'undefined' && store) { %>
                                        Store Created Successfully!
                                    <% } else { %>
                                        Congratulations!
                                    <% } %>
                                </h2>
                                
                                <% if (typeof store !== 'undefined' && store) { %>
                                    <p class="lead mb-4">Your store "<%= store.name %>" has been created and is ready to launch!</p>
                                    
                                    <div class="store-info-card">
                                        <h5><i class="bi bi-info-circle me-2"></i>Store Information</h5>
                                        <div class="store-info-grid">
                                            <div class="info-item">
                                                <strong>Store Name</strong>
                                                <%= store.name %>
                                            </div>
                                            <div class="info-item">
                                                <strong>Domain</strong>
                                                <%= store.domain %>
                                            </div>
                                            <div class="info-item">
                                                <strong>Country</strong>
                                                <%= store.country %>
                                            </div>
                                            <div class="info-item">
                                                <strong>Currency</strong>
                                                <%= store.currency %>
                                            </div>
                                            <div class="info-item">
                                                <strong>Language</strong>
                                                <%= store.language %>
                                            </div>
                                            <div class="info-item">
                                                <strong>Status</strong>
                                                <span class="badge bg-success">Active</span>
                                            </div>
                                        </div>
                                    </div>
                                <% } else { %>
                                    <p class="lead mb-4">Your store is being created and will be ready in just a few moments.</p>
                                <% } %>
                                
                                <div class="alert alert-success">
                                    <h5><i class="bi bi-rocket-takeoff me-2"></i>What happens next?</h5>
                                    <ul class="list-unstyled mb-0">
                                        <li><i class="bi bi-check me-2"></i>Store pages have been generated automatically</li>
                                        <li><i class="bi bi-check me-2"></i>
                                            <% if (typeof store !== 'undefined' && store && store.shopify_connected) { %>
                                                Shopify products will be synced
                                            <% } else { %>
                                                Shopify products will be synced (if connected)
                                            <% } %>
                                        </li>
                                        <li><i class="bi bi-check me-2"></i>SEO optimization has been applied</li>
                                        <li><i class="bi bi-check me-2"></i>Your store is ready to go live!</li>
                                    </ul>
                                </div>
                                
                                <div class="mt-4">
                                    <a href="/admin" class="btn btn-primary btn-lg me-3">
                                        <i class="bi bi-speedometer2 me-2"></i>Go to Dashboard
                                    </a>
                                    <% if (typeof store !== 'undefined' && store) { %>
                                        <a href="/admin/stores/<%= store.uuid %>" class="btn btn-outline-primary btn-lg">
                                            <i class="bi bi-eye me-2"></i>View Store Details
                                        </a>
                                    <% } %>
                                </div>
                            </div>
                        </div>

                        <!-- Step Navigation -->
                        <div class="step-navigation">
                            <button type="button" class="btn btn-outline-secondary btn-step" id="prevBtn" onclick="prevStep()" style="display: none;">
                                <i class="bi bi-arrow-left me-2"></i>Previous
                            </button>
                            
                            <div class="ms-auto">
                                <button type="button" class="btn btn-primary btn-step" id="nextBtn" onclick="nextStep()">
                                    Next <i class="bi bi-arrow-right ms-2"></i>
                                </button>
                                <button type="submit" class="btn btn-success btn-step" id="submitBtn" style="display: none;">
                                    <i class="bi bi-rocket-takeoff me-2"></i>Launch Store!
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        class SiteSetupWizard {
            constructor() {
                this.currentStep = 1;
                this.totalSteps = 5;
                this.formData = {};
                this.selectedShopifyData = null;
                this.init();
            }

            async init() {
                this.setupEventListeners();
                this.updateProgress();
                
                // Load saved Shopify stores
                await this.loadSavedShopifyStores();
                
                // Initialize with URL step if provided
                const urlParams = new URLSearchParams(window.location.search);
                const step = urlParams.get('step');
                if (step) {
                    this.goToStep(parseInt(step));
                }

                // Show success message if redirected after successful creation
                if (urlParams.get('success') === 'true') {
                    this.showAlert('Store created successfully! 🎉', 'success');
                }
                if (urlParams.get('configured') === 'true') {
                    this.showAlert('Store configured successfully! ⚙️', 'success');
                }
            }

            setupEventListeners() {
                // Auto-detect domain info
                const siteUrlInput = document.getElementById('siteUrl');
                if (siteUrlInput) {
                    siteUrlInput.addEventListener('blur', () => this.detectDomainInfo());
                }

                // Saved Shopify stores selection
                const savedStoresSelect = document.getElementById('savedShopifyStores');
                if (savedStoresSelect) {
                    savedStoresSelect.addEventListener('change', (e) => this.handleSavedStoreSelection(e.target.value));
                }

                // Shopify validation
                const validateBtn = document.getElementById('validateShopify');
                if (validateBtn) {
                    validateBtn.addEventListener('click', () => this.validateShopifyConnection());
                }

                // Page template selection
                document.querySelectorAll('.page-template-card:not(.required)').forEach(card => {
                    card.addEventListener('click', () => this.togglePageTemplate(card));
                });

                // Form validation
                const form = document.getElementById('siteSetupForm');
                if (form) {
                    form.addEventListener('submit', (e) => this.handleFormSubmit(e));
                }

                // Input validation
                document.querySelectorAll('input[required], select[required]').forEach(input => {
                    input.addEventListener('blur', () => this.validateField(input));
                    input.addEventListener('input', () => this.clearValidation(input));
                });
            }

            async detectDomainInfo() {
                const siteUrl = document.getElementById('siteUrl').value;
                if (!siteUrl) return;

                try {
                    // Simple domain detection based on TLD
                    const domain = new URL(siteUrl.includes('://') ? siteUrl : 'https://' + siteUrl);
                    const tld = domain.hostname.split('.').pop().toLowerCase();
                    
                    const detectionMap = {
                        'com': { country: 'US', currency: 'USD', language: 'en' },
                        'ca': { country: 'CA', currency: 'CAD', language: 'en' },
                        'co.uk': { country: 'GB', currency: 'GBP', language: 'en' },
                        'uk': { country: 'GB', currency: 'GBP', language: 'en' },
                        'de': { country: 'DE', currency: 'EUR', language: 'de' },
                        'fr': { country: 'FR', currency: 'EUR', language: 'fr' },
                        'se': { country: 'SE', currency: 'SEK', language: 'sv' },
                        'fi': { country: 'FI', currency: 'EUR', language: 'fi' },
                        'au': { country: 'AU', currency: 'AUD', language: 'en' },
                        'nz': { country: 'NZ', currency: 'NZD', language: 'en' }
                    };

                    const detected = detectionMap[tld] || detectionMap['com'];
                    this.showAutoDetectionResults(detected);
                    
                } catch (error) {
                    console.error('Domain detection failed:', error);
                }
            }

            showAutoDetectionResults(detected) {
                const resultsDiv = document.getElementById('autoDetectionResults');
                const countrySpan = document.getElementById('detectedCountry');
                const currencySpan = document.getElementById('detectedCurrency');
                const languageSpan = document.getElementById('detectedLanguage');

                if (resultsDiv && countrySpan && currencySpan && languageSpan) {
                    const countryNames = {
                        'US': 'United States', 'CA': 'Canada', 'GB': 'United Kingdom',
                        'DE': 'Germany', 'FR': 'France', 'SE': 'Sweden', 'FI': 'Finland',
                        'AU': 'Australia', 'NZ': 'New Zealand'
                    };

                    countrySpan.textContent = countryNames[detected.country] || detected.country;
                    currencySpan.textContent = detected.currency;
                    languageSpan.textContent = detected.language.toUpperCase();
                    
                    resultsDiv.classList.remove('d-none');
                    
                    // Auto-fill form fields
                    document.getElementById('country').value = detected.country;
                    document.getElementById('currency').value = detected.currency;
                    document.getElementById('language').value = detected.language;
                }
            }

            async loadSavedShopifyStores() {
                try {
                    const response = await fetch('/api/company-shopify-stores?activeOnly=true');
                    const data = await response.json();
                    
                    if (data.success) {
                        this.populateShopifyStoresDropdown(data.stores);
                    }
                } catch (error) {
                    console.error('Failed to load saved Shopify stores:', error);
                }
            }

            populateShopifyStoresDropdown(stores) {
                const select = document.getElementById('savedShopifyStores');
                if (!select) return;
                
                // Clear existing options except the first two
                while (select.children.length > 2) {
                    select.removeChild(select.lastChild);
                }
                
                // Add saved stores
                stores.forEach(store => {
                    if (store.connection_status === 'connected') {
                        const option = document.createElement('option');
                        option.value = store.uuid;
                        option.textContent = `${store.nickname} (${store.shopify_domain})`;
                        option.dataset.store = JSON.stringify(store);
                        select.appendChild(option);
                    }
                });
            }

            handleSavedStoreSelection(value) {
                const manualSection = document.getElementById('manualEntrySection');
                const selectedInfo = document.getElementById('selectedStoreInfo');
                
                if (value === 'new') {
                    // Show manual entry
                    manualSection.style.display = 'block';
                    selectedInfo.classList.add('d-none');
                    this.clearShopifyFields();
                } else if (value) {
                    // Show selected store info
                    manualSection.style.display = 'none';
                    this.showSelectedStoreInfo(value);
                } else {
                    // Hide both
                    manualSection.style.display = 'none';
                    selectedInfo.classList.add('d-none');
                    this.clearShopifyFields();
                }
            }

            showSelectedStoreInfo(storeUuid) {
                const select = document.getElementById('savedShopifyStores');
                const option = select.querySelector(`option[value="${storeUuid}"]`);
                
                if (option && option.dataset.store) {
                    const store = JSON.parse(option.dataset.store);
                    
                    document.getElementById('selectedShopName').textContent = store.shopify_shop_name || store.nickname;
                    document.getElementById('selectedDomain').textContent = store.shopify_domain;
                    document.getElementById('selectedProductCount').textContent = store.product_count || 0;
                    
                    document.getElementById('selectedStoreInfo').classList.remove('d-none');
                    
                    // Set hidden fields for form submission
                    this.setShopifyFormData(store.shopify_domain, store.shopify_access_token);
                }
            }

            setShopifyFormData(domain, token) {
                // We don't set the visible fields to avoid showing sensitive data
                // Instead, we'll handle this in form submission
                this.selectedShopifyData = {
                    domain: domain,
                    token: token
                };
            }

            clearShopifyFields() {
                document.getElementById('shopifyDomain').value = '';
                document.getElementById('shopifyToken').value = '';
                document.getElementById('newStoreNickname').value = '';
                this.selectedShopifyData = null;
            }

            async validateShopifyConnection() {
                const shopifyDomain = document.getElementById('shopifyDomain').value;
                const shopifyToken = document.getElementById('shopifyToken').value;
                const validateBtn = document.getElementById('validateShopify');

                if (!shopifyDomain || !shopifyToken) {
                    this.showAlert('Please enter both Shopify domain and access token', 'warning');
                    return;
                }

                // Show loading state
                validateBtn.classList.add('loading');
                validateBtn.disabled = true;
                validateBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Testing...';

                try {
                    console.log('🔄 Testing Shopify connection...', { shopifyDomain, tokenLength: shopifyToken.length });
                    
                    const response = await fetch('/api/validate-shopify', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            shopifyDomain: shopifyDomain,
                            accessToken: shopifyToken
                        })
                    });
                    
                    console.log('📥 Shopify API response:', { status: response.status, statusText: response.statusText });
                    
                    const data = await response.json();
                    console.log('📊 Response data:', JSON.stringify(data, null, 2));
                    
                    if (response.ok && data.success) {
                        console.log('✅ Shopify connection successful');
                        this.showShopifySuccess(data);
                    } else {
                        // Handle API errors
                        const errorMessage = data.error || 'Connection failed';
                        console.error('❌ Shopify connection failed:', errorMessage);
                        this.showShopifyError(errorMessage);
                    }
                    
                } catch (error) {
                    console.error('💥 Shopify validation error:', error);
                    
                    // Show detailed error message
                    let userFriendlyError = 'Connection failed. Please check your credentials.';
                    if (error.message.includes('401') || error.message.includes('Invalid')) {
                        userFriendlyError = 'Invalid access token. Please check your Shopify credentials.';
                    } else if (error.message.includes('404') || error.message.includes('not found')) {
                        userFriendlyError = 'Store not found. Please check your Shopify domain.';
                    } else if (error.message.includes('timeout') || error.message.includes('network')) {
                        userFriendlyError = 'Network timeout. Please check your connection and try again.';
                    } else if (error.message) {
                        userFriendlyError = error.message;
                    }
                    
                    this.showShopifyError(userFriendlyError);
                } finally {
                    validateBtn.classList.remove('loading');
                    validateBtn.disabled = false;
                    validateBtn.innerHTML = '<i class="bi bi-shield-check me-2"></i>Test Connection';
                }
            }

            showShopifySuccess(data) {
                console.log('🎉 showShopifySuccess called with:', data);
                const statusDiv = document.getElementById('shopifyStatus');
                
                if (!statusDiv) {
                    console.warn('⚠️ Shopify status div not found');
                    return;
                }
                
                console.log('✅ Found shopifyStatus div, updating content...');
                
                // Update the status div content for success
                statusDiv.innerHTML = `
                    <div class="alert alert-success border-0 mb-0">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-check-circle-fill me-3" style="font-size: 1.5rem; color: #198754;"></i>
                            <div>
                                <h6 class="mb-1">
                                    <i class="bi bi-shop me-2"></i>Successfully Connected!
                                </h6>
                                <p class="mb-0">
                                    Store: <strong>${data.shopName}</strong> | 
                                    Products: <strong>${data.productCount}</strong>
                                </p>
                            </div>
                        </div>
                    </div>
                `;
                
                statusDiv.classList.remove('d-none');
                
                // Add entrance animation
                statusDiv.style.transform = 'translateY(20px)';
                statusDiv.style.opacity = '0';
                
                setTimeout(() => {
                    statusDiv.style.transition = 'all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55)';
                    statusDiv.style.transform = 'translateY(0)';
                    statusDiv.style.opacity = '1';
                }, 100);
            }
            
            showShopifyError(errorMessage) {
                console.log('❌ showShopifyError called with:', errorMessage);
                const statusDiv = document.getElementById('shopifyStatus');
                
                if (!statusDiv) {
                    console.warn('⚠️ Shopify status div not found');
                    return;
                }
                
                console.log('✅ Found shopifyStatus div, updating content for error...');
                
                // Update the status div content for error
                statusDiv.innerHTML = `
                    <div class="alert alert-danger border-0 mb-0">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-x-circle-fill me-3" style="font-size: 1.5rem; color: #dc3545;"></i>
                            <div>
                                <h6 class="mb-1">
                                    <i class="bi bi-exclamation-triangle me-2"></i>Connection Failed
                                </h6>
                                <p class="mb-0 small">
                                    ${errorMessage}
                                </p>
                                <small class="text-muted">
                                    Please check your Shopify domain and access token, then try again.
                                </small>
                            </div>
                        </div>
                    </div>
                `;
                
                statusDiv.classList.remove('d-none');
                
                // Add entrance animation
                statusDiv.style.transform = 'translateY(20px)';
                statusDiv.style.opacity = '0';
                
                setTimeout(() => {
                    statusDiv.style.transition = 'all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55)';
                    statusDiv.style.transform = 'translateY(0)';
                    statusDiv.style.opacity = '1';
                }, 100);
            }

            togglePageTemplate(card) {
                if (card.classList.contains('required')) return;

                const checkbox = card.querySelector('input[type="checkbox"]');
                if (checkbox) {
                    checkbox.checked = !checkbox.checked;
                    card.classList.toggle('selected', checkbox.checked);
                }
            }

            validateField(field) {
                const isValid = field.checkValidity();
                field.classList.toggle('is-invalid', !isValid);
                field.classList.toggle('is-valid', isValid && field.value.trim() !== '');
                return isValid;
            }

            clearValidation(field) {
                field.classList.remove('is-invalid', 'is-valid');
            }

            validateStep(stepNumber) {
                const stepDiv = document.getElementById(`step${stepNumber}`);
                const requiredFields = stepDiv.querySelectorAll('input[required], select[required]');
                let isValid = true;

                requiredFields.forEach(field => {
                    if (!this.validateField(field)) {
                        isValid = false;
                    }
                });

                return isValid;
            }

            nextStep() {
                if (this.currentStep < this.totalSteps) {
                    if (this.validateStep(this.currentStep)) {
                        this.goToStep(this.currentStep + 1);
                    } else {
                        this.showAlert('Please fill in all required fields', 'warning');
                    }
                }
            }

            prevStep() {
                if (this.currentStep > 1) {
                    this.goToStep(this.currentStep - 1);
                }
            }

            goToStep(stepNumber) {
                // Hide all steps
                document.querySelectorAll('.form-step').forEach(step => {
                    step.classList.remove('active');
                });

                // Show target step
                document.getElementById(`step${stepNumber}`).classList.add('active');
                
                this.currentStep = stepNumber;
                this.updateProgress();
                this.updateNavigation();
                
                // Update URL
                const url = new URL(window.location);
                url.searchParams.set('step', stepNumber);
                window.history.pushState({}, '', url);
            }

            updateProgress() {
                const progressBar = document.getElementById('progressBar');
                const progressPercentage = ((this.currentStep - 1) / (this.totalSteps - 1)) * 100;
                progressBar.style.width = progressPercentage + '%';

                // Update step indicators
                document.querySelectorAll('.step').forEach((step, index) => {
                    const stepNumber = index + 1;
                    step.classList.remove('active', 'completed');
                    
                    if (stepNumber < this.currentStep) {
                        step.classList.add('completed');
                    } else if (stepNumber === this.currentStep) {
                        step.classList.add('active');
                    }
                });
            }

            updateNavigation() {
                const prevBtn = document.getElementById('prevBtn');
                const nextBtn = document.getElementById('nextBtn');
                const submitBtn = document.getElementById('submitBtn');

                // Show/hide previous button
                prevBtn.style.display = this.currentStep > 1 ? 'block' : 'none';

                // Show/hide next/submit buttons
                if (this.currentStep === this.totalSteps) {
                    nextBtn.style.display = 'none';
                    submitBtn.style.display = 'none';
                } else if (this.currentStep === this.totalSteps - 1) {
                    nextBtn.style.display = 'none';
                    submitBtn.style.display = 'block';
                } else {
                    nextBtn.style.display = 'block';
                    submitBtn.style.display = 'none';
                }
            }

            handleFormSubmit(e) {
                e.preventDefault();
                
                // Validate all required steps
                for (let i = 1; i < this.totalSteps; i++) {
                    if (!this.validateStep(i)) {
                        this.showAlert(`Please complete step ${i} before submitting`, 'warning');
                        this.goToStep(i);
                        return;
                    }
                }

                // Handle Shopify data
                this.prepareShopifyData();

                // Show loading on submit button
                const submitBtn = document.getElementById('submitBtn');
                const originalText = submitBtn.innerHTML;
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Creating Store...';

                // Submit form after showing loading state
                setTimeout(() => {
                    e.target.submit();
                }, 500);
            }

            prepareShopifyData() {
                const savedStore = document.getElementById('savedShopifyStores').value;
                const form = document.getElementById('siteSetupForm');
                
                if (savedStore && savedStore !== 'new' && this.selectedShopifyData) {
                    // Use selected saved store
                    this.setHiddenInput(form, 'shopifyDomain', this.selectedShopifyData.domain);
                    this.setHiddenInput(form, 'shopifyToken', this.selectedShopifyData.token);
                } else if (savedStore === 'new') {
                    // Save new store to company profile and use it
                    const nickname = document.getElementById('newStoreNickname').value;
                    const domain = document.getElementById('shopifyDomain').value;
                    const token = document.getElementById('shopifyToken').value;
                    
                    if (nickname && domain && token) {
                        this.setHiddenInput(form, 'newShopifyStore', 'true');
                        this.setHiddenInput(form, 'newStoreNickname', nickname);
                    }
                }
            }

            setHiddenInput(form, name, value) {
                let input = form.querySelector(`input[name="${name}"]`);
                if (!input) {
                    input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = name;
                    form.appendChild(input);
                }
                input.value = value;
            }

            showAlert(message, type = 'info') {
                // Remove existing alerts
                document.querySelectorAll('.alert-dismissible').forEach(alert => alert.remove());
                
                const alertDiv = document.createElement('div');
                alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
                alertDiv.innerHTML = `
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;
                
                const formSection = document.querySelector('.form-section');
                formSection.insertBefore(alertDiv, formSection.firstChild);
                
                // Auto-dismiss after 5 seconds
                setTimeout(() => {
                    if (alertDiv.parentNode) {
                        alertDiv.remove();
                    }
                }, 5000);
            }
        }

        // Global functions for step navigation
        let wizard;

        function nextStep() {
            wizard.nextStep();
        }

        function prevStep() {
            wizard.prevStep();
        }

        // Initialize when DOM is loaded
        document.addEventListener('DOMContentLoaded', async () => {
            wizard = new SiteSetupWizard();
        });
    </script>
</body>
</html>